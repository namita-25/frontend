{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuGroup = (_ref, ref) => {\n  let {\n    title,\n    children,\n    ...props\n  } = _ref;\n  const {\n    _title,\n    ...resolvedProps\n  } = usePropsResolution('MenuGroup', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps({ ...props,\n    title\n  })) {\n    return null;\n  } //TODO: Can be simplified\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(Text, _title, title)), children);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(MenuGroup));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,SAAS,GAAG,OAEhBC,GAFgB,KAGb;EAAA,IAFH;IAAEC,KAAF;IAASC,QAAT;IAAmB,GAAGC;EAAtB,CAEG;EACH,MAAM;IAAEC,MAAF;IAAU,GAAGC;EAAb,IAA+BT,kBAAkB,CAAC,WAAD,EAAcO,KAAd,CAAvD,CADG,CAGH;;EACA,IAAIL,qBAAqB,CAAC,EAAE,GAAGK,KAAL;IAAYF;EAAZ,CAAD,CAAzB,EAAgD;IAC9C,OAAO,IAAP;EALC,EAQH;;;EACA,oBACET,uDACEA,oBAACK,GAAD,eAASQ,aAAT;IAAwBL,GAAG,EAAEA;EAA7B,iBACER,oBAACG,IAAD,EAAUS,MAAV,EAAmBH,KAAnB,CADF,CADF,EAIGC,QAJH,CADF;AAZF;;AAsBA,4BAAeT,IAAI,eAACC,UAAU,CAACK,SAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Text","usePropsResolution","Box","useHasResponsiveProps","MenuGroup","ref","title","children","props","_title","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Menu/MenuGroup.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport Box from '../../primitives/Box';\nimport type { IMenuGroupProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuGroup = (\n  { title, children, ...props }: IMenuGroupProps,\n  ref: any\n) => {\n  const { _title, ...resolvedProps } = usePropsResolution('MenuGroup', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps({ ...props, title })) {\n    return null;\n  }\n\n  //TODO: Can be simplified\n  return (\n    <>\n      <Box {...resolvedProps} ref={ref}>\n        <Text {..._title}>{title}</Text>\n      </Box>\n      {children}\n    </>\n  );\n};\n\nexport default memo(forwardRef(MenuGroup));\n"]},"metadata":{},"sourceType":"module"}