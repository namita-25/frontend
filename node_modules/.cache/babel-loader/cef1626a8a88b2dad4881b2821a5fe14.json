{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { default as Box } from '../Box';\nimport { getAbsoluteChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ZStack = (_ref, ref) => {\n  let {\n    children,\n    reversed,\n    ...props\n  } = _ref;\n  const resolvedProps = usePropsResolution('ZStack', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), getAbsoluteChildren(children, reversed));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(ZStack));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,OAAO,IAAIC,GAApB,QAAkD,QAAlD;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAWA,MAAMC,MAAM,GAAG,OAAiDC,GAAjD,KAA+D;EAAA,IAA9D;IAAEC,QAAF;IAAYC,QAAZ;IAAsB,GAAGC;EAAzB,CAA8D;EAC5E,MAAMC,aAAa,GAAGP,kBAAkB,CAAC,QAAD,EAAWM,KAAX,CAAxC,CAD4E,CAE5E;;EACA,IAAIL,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACEZ,oBAACI,GAAD,eAASS,aAAT;IAAwBJ,GAAG,EAAEA;EAA7B,IACGJ,mBAAmB,CAACK,QAAD,EAAWC,QAAX,CADtB,CADF;AANF;;AAaA,4BAAeV,IAAI,eAACC,UAAU,CAACM,MAAD,CAAX,CAAnB","names":["React","memo","forwardRef","default","Box","getAbsoluteChildren","usePropsResolution","useHasResponsiveProps","ZStack","ref","children","reversed","props","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/primitives/ZStack/index.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box, InterfaceBoxProps } from '../Box';\nimport { getAbsoluteChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { CustomProps } from '../../../components/types';\n\nexport interface InterfaceZStackProps extends InterfaceBoxProps<IZStackProps> {\n  /**\n   * The direction to stack the elements.\n   */\n  reversed?: boolean;\n}\n\nexport type IZStackProps = InterfaceZStackProps & CustomProps<'ZStack'>;\nconst ZStack = ({ children, reversed, ...props }: IZStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ZStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAbsoluteChildren(children, reversed)}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ZStack));\n"]},"metadata":{},"sourceType":"module"}