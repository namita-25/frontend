{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst AvatarBadge = /*#__PURE__*/memo( /*#__PURE__*/forwardRef((props, ref) => {\n  const resolvedProps = usePropsResolution('AvatarBadge', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n}));\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,WAAW,gBAAGL,IAAI,eACtBC,UAAU,CAAC,CAACK,KAAD,EAA2BC,GAA3B,KAAyC;EAClD,MAAMC,aAAa,GAAGL,kBAAkB,CAAC,aAAD,EAAgBG,KAAhB,CAAxC,CADkD,CAElD;;EACA,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOP,oBAACG,GAAD,eAASM,aAAT;IAAwBD,GAAG,EAAEA;EAA7B,GAAP;AANQ,EADY,CAAxB;AAWAF,WAAW,CAACI,WAAZJ,GAA0B,aAA1BA;AACA,eAAeA,WAAf","names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","AvatarBadge","props","ref","resolvedProps","displayName"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Avatar/Badge.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarBadgeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AvatarBadge = memo(\n  forwardRef((props: IAvatarBadgeProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('AvatarBadge', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return <Box {...resolvedProps} ref={ref} />;\n  })\n);\n\nAvatarBadge.displayName = 'AvatarBadge';\nexport default AvatarBadge as (props: IAvatarBadgeProps, ref?: any) => any;\n"]},"metadata":{},"sourceType":"module"}