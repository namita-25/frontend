{"ast":null,"code":"import React from 'react';\nimport { AccessibilityInfo } from 'react-native';\nexport function useScreenReaderEnabled() {\n  const [enabled, setEnabled] = React.useState(false);\n  const mountedRef = React.useRef(false);\n\n  const handleSetEnabled = value => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n\n    async function setInitialValue() {\n      const res = await AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n\n    let handler = AccessibilityInfo.addEventListener('screenReaderChanged', event => {\n      handleSetEnabled(event);\n    });\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n  return enabled;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,OAAO,SAASC,sBAAT,GAAkC;EACvC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAANL,CAAe,KAAfA,CAA9B;EACA,MAAMM,UAAU,GAAGN,KAAK,CAACO,MAANP,CAAa,KAAbA,CAAnB;;EAEA,MAAMQ,gBAAgB,GAAIC,KAAD,IAAoB;IAC3C,IAAIH,UAAU,CAACI,OAAf,EAAwB;MACtBN,UAAU,CAACK,KAAD,CAAVL;IACD;EAHH;;EAMAJ,KAAK,CAACW,SAANX,CAAgB,MAAM;IACpBM,UAAU,CAACI,OAAXJ,GAAqB,IAArBA;;IACA,eAAeM,eAAf,GAAiC;MAC/B,MAAMC,GAAG,GAAG,MAAMZ,iBAAiB,CAACa,qBAAlBb,EAAlB;MACAO,gBAAgB,CAACK,GAAD,CAAhBL;IACD;;IAED,IAAIO,OAAY,GAAGd,iBAAiB,CAACe,gBAAlBf,CACjB,qBADiBA,EAEhBgB,KAAD,IAAgB;MACdT,gBAAgB,CAACS,KAAD,CAAhBT;IAHe,EAAnB;IAOAI,eAAe;IACf,OAAO,MAAM;MACXN,UAAU,CAACI,OAAXJ,GAAqB,KAArBA;MACAL,iBAAiB,CAACiB,mBAAlBjB,CAAsC,qBAAtCA,EAA6Dc,OAA7Dd;IAFF;EAfF;EAqBA,OAAOE,OAAP;AACD","names":["React","AccessibilityInfo","useScreenReaderEnabled","enabled","setEnabled","useState","mountedRef","useRef","handleSetEnabled","value","current","useEffect","setInitialValue","res","isScreenReaderEnabled","handler","addEventListener","event","removeEventListener"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/hooks/useScreenReaderEnabled.ts"],"sourcesContent":["import React from 'react';\nimport { AccessibilityInfo } from 'react-native';\n\nexport function useScreenReaderEnabled() {\n  const [enabled, setEnabled] = React.useState(false);\n  const mountedRef = React.useRef(false);\n\n  const handleSetEnabled = (value: boolean) => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n    async function setInitialValue() {\n      const res = await AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n\n    let handler: any = AccessibilityInfo.addEventListener(\n      'screenReaderChanged',\n      (event: any) => {\n        handleSetEnabled(event);\n      }\n    );\n\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n\n  return enabled;\n}\n"]},"metadata":{},"sourceType":"module"}