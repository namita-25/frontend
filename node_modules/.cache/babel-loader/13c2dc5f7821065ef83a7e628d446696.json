{"ast":null,"code":"import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getSortedProps, calculatePaddingProps } from './utils';\nimport { useTheme } from './../useTheme';\nexport function useSafeArea(props) {\n  const insets = useSafeAreaInsets();\n  const sizes = useTheme().sizes;\n  const {\n    safeAreaProps,\n    paddingProps,\n    sansPaddingProps\n  } = getSortedProps(props);\n\n  if (!Object.keys(safeAreaProps).length) {\n    return props;\n  }\n\n  let calcualtedPaddingProps = calculatePaddingProps(safeAreaProps, paddingProps, insets, sizes);\n  return { ...sansPaddingProps,\n    ...paddingProps,\n    ...calcualtedPaddingProps\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,cAAT,EAAyBC,qBAAzB,QAAsD,SAAtD;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAiC;EACtC,MAAMC,MAAM,GAAGN,iBAAiB,EAAhC;EACA,MAAMO,KAAK,GAAGJ,QAAQ,GAAGI,KAAzB;EACA,MAAM;IAAEC,aAAF;IAAiBC,YAAjB;IAA+BC;EAA/B,IAAoDT,cAAc,CACtEI,KADsE,CAAxE;;EAGA,IAAI,CAACM,MAAM,CAACC,IAAPD,CAAYH,aAAZG,EAA2BE,MAAhC,EAAwC;IACtC,OAAOR,KAAP;EACD;;EACD,IAAIS,sBAAsB,GAAGZ,qBAAqB,CAChDM,aADgD,EAEhDC,YAFgD,EAGhDH,MAHgD,EAIhDC,KAJgD,CAAlD;EAMA,OAAO,EAAE,GAAGG,gBAAL;IAAuB,GAAGD,YAA1B;IAAwC,GAAGK;EAA3C,CAAP;AACD","names":["useSafeAreaInsets","getSortedProps","calculatePaddingProps","useTheme","useSafeArea","props","insets","sizes","safeAreaProps","paddingProps","sansPaddingProps","Object","keys","length","calcualtedPaddingProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/hooks/useSafeArea/index.ts"],"sourcesContent":["import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { getSortedProps, calculatePaddingProps } from './utils';\nimport { useTheme } from './../useTheme';\n\nexport function useSafeArea(props: any) {\n  const insets = useSafeAreaInsets();\n  const sizes = useTheme().sizes;\n  const { safeAreaProps, paddingProps, sansPaddingProps } = getSortedProps(\n    props\n  );\n  if (!Object.keys(safeAreaProps).length) {\n    return props;\n  }\n  let calcualtedPaddingProps = calculatePaddingProps(\n    safeAreaProps,\n    paddingProps,\n    insets,\n    sizes\n  );\n  return { ...sansPaddingProps, ...paddingProps, ...calcualtedPaddingProps };\n}\n"]},"metadata":{},"sourceType":"module"}