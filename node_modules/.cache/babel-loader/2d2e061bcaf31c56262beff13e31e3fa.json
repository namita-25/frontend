{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Kbd = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const newProps = useThemeProps('Kbd', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), children);\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Kbd));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,GAAG,GAAG,OAAoCC,GAApC,KAAkD;EAAA,IAAjD;IAAEC,QAAF;IAAY,GAAGC;EAAf,CAAiD;EAC5D,MAAMC,QAAQ,GAAGN,aAAa,CAAC,KAAD,EAAQK,KAAR,CAA9B,CAD4D,CAE5D;;EACA,IAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACEP,oBAACC,GAAD,eAASO,QAAT;IAAmBH,GAAG,EAAEA;EAAxB,IACGC,QADH,CADF;AANF;;AAaA,4BAAeN,KAAK,CAACS,IAANT,eAAWA,KAAK,CAACU,UAANV,CAAiBI,GAAjBJ,CAAXA,CAAf","names":["React","Box","useThemeProps","useHasResponsiveProps","Kbd","ref","children","props","newProps","memo","forwardRef"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/KBD/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { IKbdProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Kbd = ({ children, ...props }: IKbdProps, ref?: any) => {\n  const newProps = useThemeProps('Kbd', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...newProps} ref={ref}>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Kbd));\nexport type { IKbdProps };\n"]},"metadata":{},"sourceType":"module"}