{"ast":null,"code":"import { mode, transparentize } from '../tools';\nimport { Platform } from 'react-native';\n\nconst disabledTextColor = props => mode(\"muted.500\", \"muted.300\")(props);\n\nconst baseStyle = props => {\n  const {\n    primary\n  } = props.theme.colors;\n  const focusRing = Platform.OS === 'web' ? mode({\n    boxShadow: \"\".concat(primary[400], \" 0px 0px 0px 2px\"),\n    zIndex: 1\n  }, {\n    boxShadow: \"\".concat(primary[500], \" 0px 0px 0px 2px\"),\n    zIndex: 1\n  })(props) : {};\n  return {\n    borderRadius: 'sm',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      cursor: props.isDisabled ? 'not-allowed' : props.isLoading ? 'default' : 'pointer'\n    },\n    _text: {\n      fontWeight: 'medium'\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? { ...focusRing\n      } : {}\n    },\n    _stack: {\n      space: 2,\n      alignItems: 'center'\n    },\n    _loading: {\n      opacity: '80'\n    },\n    _disabled: {\n      opacity: '50'\n    },\n    _spinner: {\n      size: 'sm',\n      focusable: false\n    }\n  };\n};\n\nfunction variantGhost(props) {\n  const {\n    colorScheme: c\n  } = props;\n\n  if (c === 'muted') {\n    return {\n      _text: {\n        color: disabledTextColor(props)\n      }\n    };\n  }\n\n  return {\n    _text: {\n      color: props.isDisabled ? disabledTextColor(props) : mode(\"\".concat(c, \".500\"), \"\".concat(c, \".300\"))(props)\n    },\n    bg: 'transparent',\n    _web: {\n      outlineWidth: '0'\n    },\n    _hover: {\n      borderColor: mode(\"\".concat(c, \".500\"), \"\".concat(c, \".200\"))(props),\n      bg: transparentize(mode(\"\".concat(c, \".200\"), \"\".concat(c, \".400\"))(props), 0.5)(props.theme)\n    },\n    _focusVisible: {\n      borderColor: mode(\"\".concat(c, \".700\"), \"\".concat(c, \".200\"))(props),\n      bg: transparentize(mode(\"\".concat(c, \".200\"), \"\".concat(c, \".400\"))(props), 0.5)(props.theme)\n    },\n    _pressed: {\n      borderColor: mode(\"\".concat(c, \".600\"), \"\".concat(c, \".200\"))(props),\n      bg: transparentize(mode(\"\".concat(c, \".300\"), \"\".concat(c, \".500\"))(props), 0.5)(props.theme)\n    },\n    _spinner: {\n      size: 'sm'\n    }\n  };\n}\n\nfunction variantOutline(props) {\n  const {\n    colorScheme: c\n  } = props;\n  const borderColor = mode(\"muted.200\", \"muted.500\")(props);\n  return {\n    borderWidth: '1',\n    borderColor: c === 'muted' ? borderColor : props.isDisabled ? disabledTextColor(props) : mode(\"\".concat(c, \".300\"), \"\".concat(c, \".300\"))(props),\n    ...variantGhost(props)\n  };\n}\n\nfunction variantSolid(props) {\n  const {\n    colorScheme: c\n  } = props;\n  let bg = \"\".concat(c, \".500\");\n\n  if (props.isDisabled) {\n    bg = mode(\"muted.300\", \"muted.500\")(props);\n  }\n\n  const styleObject = {\n    _web: {\n      outlineWidth: '0'\n    },\n    bg,\n    _hover: {\n      bg: \"\".concat(c, \".600\")\n    },\n    _pressed: {\n      bg: \"\".concat(c, \".700\")\n    },\n    _focus: {\n      bg: \"\".concat(c, \".600\")\n    },\n    _loading: {\n      bg: mode(\"warmGray.50\", \"\".concat(c, \".300\"))(props),\n      opacity: '50'\n    },\n    _disabled: {\n      bg: mode(\"trueGray.300\", \"trueGray.600\")(props)\n    }\n  };\n  return styleObject;\n} // function getBg(props: Record<string, any>) {\n//   const { theme, status, variant } = props;\n//   let { colorScheme } = props;\n//   colorScheme = getColorScheme(\n//     props,\n//     colorScheme !== 'primary' ? colorScheme : status\n//   );\n//   const lightBg =\n//     variant === 'solid'\n//       ? getColor(theme, `${colorScheme}.400`, colorScheme)\n//       : getColor(theme, `${colorScheme}.100`, colorScheme);\n//   const darkBg =\n//     variant === 'solid'\n//       ? getColor(theme, `${colorScheme}.700`, colorScheme)\n//       : getColor(theme, `${colorScheme}.400`, colorScheme);\n//   return mode(lightBg, darkBg)(props);\n// }\n\n\nfunction variantSubtle(props) {\n  const {\n    colorScheme: c\n  } = props;\n  let bg = \"\".concat(c, \".100\");\n  bg = mode(bg, \"\".concat(c, \".200\"))(props);\n  let color;\n\n  if (props.isDisabled) {\n    bg = mode(\"muted.300\", \"muted.500\")(props);\n  } else {\n    color = mode(\"\".concat(c, \".500\"), \"\".concat(c, \".600\"))(props);\n  }\n\n  const styleObject = {\n    _text: {\n      color: color\n    },\n    _web: {\n      outlineWidth: '0'\n    },\n    bg,\n    _hover: {\n      _text: {\n        color: mode(\"\".concat(c, \".600\"), \"\".concat(c, \".700\"))(props)\n      },\n      bg: mode(\"\".concat(c, \".200\"), \"\".concat(c, \".300\"))(props)\n    },\n    _pressed: {\n      _text: {\n        color: mode(\"\".concat(c, \".700\"), \"\".concat(c, \".800\"))(props)\n      },\n      bg: mode(\"\".concat(c, \".300\"), \"\".concat(c, \".400\"))(props)\n    }\n  };\n  return styleObject;\n}\n\nfunction variantLink(props) {\n  const {\n    colorScheme: c\n  } = props;\n  return { ...variantGhost(props),\n    _text: {\n      textDecorationLine: Platform.select({\n        ios: 'underline',\n        web: 'underline'\n      }),\n      color: c === 'muted' ? mode(\"muted.800\", \"\".concat(c, \".200\"))(props) : props.isDisabled ? disabledTextColor(props) : mode(\"\".concat(c, \".500\"), \"\".concat(c, \".300\"))(props)\n    },\n    _hover: {\n      _text: {\n        color: mode(\"\".concat(c, \".600\"), \"\".concat(c, \".400\"))(props),\n        textDecorationLine: 'underline'\n      }\n    },\n    _focusVisible: {\n      _text: {\n        color: mode(\"\".concat(c, \".600\"), \"\".concat(c, \".400\"))(props),\n        textDecorationLine: 'underline'\n      }\n    },\n    _pressed: {\n      _text: {\n        color: mode(\"\".concat(c, \".700\"), \"\".concat(c, \".500\"))(props)\n      }\n    }\n  };\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nconst variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  subtle: variantSubtle,\n  link: variantLink,\n  unstyled: variantUnstyled\n};\nconst sizes = {\n  lg: {\n    px: '4',\n    py: '2',\n    _text: {\n      fontSize: 'md'\n    }\n  },\n  md: {\n    px: '3',\n    py: '2',\n    _text: {\n      fontSize: 'sm'\n    }\n  },\n  sm: {\n    px: '2',\n    py: '2',\n    _text: {\n      fontSize: 'xs'\n    }\n  },\n  xs: {\n    px: '2',\n    py: '2',\n    _text: {\n      fontSize: '2xs'\n    }\n  }\n};\nconst defaultProps = {\n  variant: 'solid',\n  size: 'md',\n  colorScheme: 'primary'\n};\nexport const ButtonGroup = {\n  baseStyle: {\n    direction: 'row'\n  },\n  defaultProps: {\n    space: 2\n  }\n};\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps\n};","map":{"version":3,"mappings":"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","names":["mode","transparentize","Platform","disabledTextColor","props","baseStyle","primary","theme","colors","focusRing","OS","boxShadow","zIndex","borderRadius","flexDirection","justifyContent","alignItems","_web","cursor","isDisabled","isLoading","_text","fontWeight","_focusVisible","style","variant","_stack","space","_loading","opacity","_disabled","_spinner","size","focusable","variantGhost","colorScheme","c","color","bg","outlineWidth","_hover","borderColor","_pressed","variantOutline","borderWidth","variantSolid","styleObject","_focus","variantSubtle","variantLink","textDecorationLine","select","ios","web","variantUnstyled","variants","ghost","outline","solid","subtle","link","unstyled","sizes","lg","px","py","fontSize","md","sm","xs","defaultProps","ButtonGroup","direction"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/theme/v33x-theme/components/button.ts"],"sourcesContent":["import { Dict, mode, transparentize } from '../tools';\nimport { Platform } from 'react-native';\nconst disabledTextColor = (props: any) => mode(`muted.500`, `muted.300`)(props);\n\nconst baseStyle = (props: any) => {\n  const { primary } = props.theme.colors;\n  const focusRing =\n    Platform.OS === 'web'\n      ? mode(\n          { boxShadow: `${primary[400]} 0px 0px 0px 2px`, zIndex: 1 },\n          { boxShadow: `${primary[500]} 0px 0px 0px 2px`, zIndex: 1 }\n        )(props)\n      : {};\n\n  return {\n    borderRadius: 'sm',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    _web: {\n      cursor: props.isDisabled\n        ? 'not-allowed'\n        : props.isLoading\n        ? 'default'\n        : 'pointer',\n    },\n    _text: {\n      fontWeight: 'medium',\n    },\n    _focusVisible: {\n      style: props.variant !== 'unstyled' ? { ...focusRing } : {},\n    },\n    _stack: {\n      space: 2,\n      alignItems: 'center',\n    },\n    _loading: {\n      opacity: '80',\n    },\n    _disabled: {\n      opacity: '50',\n    },\n    _spinner: {\n      size: 'sm',\n      focusable: false,\n    },\n  };\n};\n\nfunction variantGhost(props: Dict) {\n  const { colorScheme: c } = props;\n  if (c === 'muted') {\n    return {\n      _text: {\n        color: disabledTextColor(props),\n      },\n    };\n  }\n\n  return {\n    _text: {\n      color: props.isDisabled\n        ? disabledTextColor(props)\n        : mode(`${c}.500`, `${c}.300`)(props),\n    },\n    bg: 'transparent',\n    _web: {\n      outlineWidth: '0',\n    },\n    _hover: {\n      borderColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: transparentize(mode(`${c}.200`, `${c}.400`)(props), 0.5)(props.theme),\n    },\n    _focusVisible: {\n      borderColor: mode(`${c}.700`, `${c}.200`)(props),\n      bg: transparentize(mode(`${c}.200`, `${c}.400`)(props), 0.5)(props.theme),\n    },\n    _pressed: {\n      borderColor: mode(`${c}.600`, `${c}.200`)(props),\n      bg: transparentize(mode(`${c}.300`, `${c}.500`)(props), 0.5)(props.theme),\n    },\n    _spinner: {\n      size: 'sm',\n    },\n  };\n}\n\nfunction variantOutline(props: Dict) {\n  const { colorScheme: c } = props;\n  const borderColor = mode(`muted.200`, `muted.500`)(props);\n  return {\n    borderWidth: '1',\n    borderColor:\n      c === 'muted'\n        ? borderColor\n        : props.isDisabled\n        ? disabledTextColor(props)\n        : mode(`${c}.300`, `${c}.300`)(props),\n    ...variantGhost(props),\n  };\n}\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme: c } = props;\n  let bg = `${c}.500`;\n  if (props.isDisabled) {\n    bg = mode(`muted.300`, `muted.500`)(props);\n  }\n\n  const styleObject = {\n    _web: {\n      outlineWidth: '0',\n    },\n    bg,\n    _hover: {\n      bg: `${c}.600`,\n    },\n    _pressed: {\n      bg: `${c}.700`,\n    },\n    _focus: {\n      bg: `${c}.600`,\n    },\n    _loading: {\n      bg: mode(`warmGray.50`, `${c}.300`)(props),\n      opacity: '50',\n    },\n    _disabled: { bg: mode(`trueGray.300`, `trueGray.600`)(props) },\n  };\n\n  return styleObject;\n}\n\n// function getBg(props: Record<string, any>) {\n//   const { theme, status, variant } = props;\n//   let { colorScheme } = props;\n\n//   colorScheme = getColorScheme(\n//     props,\n//     colorScheme !== 'primary' ? colorScheme : status\n//   );\n//   const lightBg =\n//     variant === 'solid'\n//       ? getColor(theme, `${colorScheme}.400`, colorScheme)\n//       : getColor(theme, `${colorScheme}.100`, colorScheme);\n\n//   const darkBg =\n//     variant === 'solid'\n//       ? getColor(theme, `${colorScheme}.700`, colorScheme)\n//       : getColor(theme, `${colorScheme}.400`, colorScheme);\n//   return mode(lightBg, darkBg)(props);\n// }\n\nfunction variantSubtle(props: Dict) {\n  const { colorScheme: c } = props;\n  let bg = `${c}.100`;\n  bg = mode(bg, `${c}.200`)(props);\n  let color;\n  if (props.isDisabled) {\n    bg = mode(`muted.300`, `muted.500`)(props);\n  } else {\n    color = mode(`${c}.500`, `${c}.600`)(props);\n  }\n  const styleObject = {\n    _text: {\n      color: color,\n    },\n    _web: {\n      outlineWidth: '0',\n    },\n    bg,\n    _hover: {\n      _text: { color: mode(`${c}.600`, `${c}.700`)(props) },\n      bg: mode(`${c}.200`, `${c}.300`)(props),\n    },\n    _pressed: {\n      _text: { color: mode(`${c}.700`, `${c}.800`)(props) },\n      bg: mode(`${c}.300`, `${c}.400`)(props),\n    },\n  };\n\n  return styleObject;\n}\n\nfunction variantLink(props: Dict) {\n  const { colorScheme: c } = props;\n\n  return {\n    ...variantGhost(props),\n    _text: {\n      textDecorationLine: Platform.select({\n        ios: 'underline',\n        web: 'underline',\n      }),\n      color:\n        c === 'muted'\n          ? mode(`muted.800`, `${c}.200`)(props)\n          : props.isDisabled\n          ? disabledTextColor(props)\n          : mode(`${c}.500`, `${c}.300`)(props),\n    },\n    _hover: {\n      _text: {\n        color: mode(`${c}.600`, `${c}.400`)(props),\n        textDecorationLine: 'underline',\n      },\n    },\n    _focusVisible: {\n      _text: {\n        color: mode(`${c}.600`, `${c}.400`)(props),\n        textDecorationLine: 'underline',\n      },\n    },\n    _pressed: {\n      _text: { color: mode(`${c}.700`, `${c}.500`)(props) },\n    },\n  };\n}\n\nfunction variantUnstyled() {\n  return {};\n}\n\nconst variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  subtle: variantSubtle,\n  link: variantLink,\n  unstyled: variantUnstyled,\n};\n\nconst sizes = {\n  lg: {\n    px: '4',\n    py: '2',\n    _text: {\n      fontSize: 'md',\n    },\n  },\n  md: {\n    px: '3',\n    py: '2',\n    _text: {\n      fontSize: 'sm',\n    },\n  },\n  sm: {\n    px: '2',\n    py: '2',\n    _text: {\n      fontSize: 'xs',\n    },\n  },\n  xs: {\n    px: '2',\n    py: '2',\n    _text: {\n      fontSize: '2xs',\n    },\n  },\n};\n\nconst defaultProps = {\n  variant: 'solid',\n  size: 'md',\n  colorScheme: 'primary',\n};\n\nexport const ButtonGroup = {\n  baseStyle: { direction: 'row' },\n  defaultProps: { space: 2 },\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}