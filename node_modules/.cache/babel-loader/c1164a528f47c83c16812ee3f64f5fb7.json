{"ast":null,"code":"export const dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\nexport function capitalizeString(string) {\n  return \"\".concat(string.slice(0, 1).toUpperCase()).concat(string.slice(1));\n}\nexport function getDefaultValue(props, propKey) {\n  let defaultStateValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dropdownDefaultStateValues;\n  const defaultPropKey = \"default\".concat(capitalizeString(propKey));\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  } //@ts-ignore\n\n\n  return defaultStateValues[propKey];\n}","map":{"version":3,"mappings":"AAAA,OAAO,MAAMA,0BAA0B,GAAG;EACxCC,gBAAgB,EAAE,CAAC,CADqB;EAExCC,MAAM,EAAE,KAFgC;EAGxCC,YAAY,EAAE,IAH0B;EAIxCC,UAAU,EAAE;AAJ4B,CAAnC;AAOP,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAA0C;EAC/C,iBAAUA,MAAM,CAACC,KAAPD,CAAa,CAAbA,EAAgB,CAAhBA,EAAmBE,WAAnBF,EAAV,SAA6CA,MAAM,CAACC,KAAPD,CAAa,CAAbA,CAA7C;AACD;AAED,OAAO,SAASG,eAAT,CACLC,KADK,EAELC,OAFK,EAIL;EAAA,IADAC,kBACA,uEADqBZ,0BACrB;EACA,MAAMa,cAAc,oBAAaR,gBAAgB,CAACM,OAAD,CAA7B,CAApB;;EAEA,IAAIE,cAAc,IAAIH,KAAtB,EAA6B;IAC3B,OAAOA,KAAK,CAACG,cAAD,CAAZ;EAJF,EAMA;;;EACA,OAAOD,kBAAkB,CAACD,OAAD,CAAzB;AACD","names":["dropdownDefaultStateValues","highlightedIndex","isOpen","selectedItem","inputValue","capitalizeString","string","slice","toUpperCase","getDefaultValue","props","propKey","defaultStateValues","defaultPropKey"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Typeahead/useTypeahead/utils.ts"],"sourcesContent":["export const dropdownDefaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: '',\n};\n\nexport function capitalizeString(string: string) {\n  return `${string.slice(0, 1).toUpperCase()}${string.slice(1)}`;\n}\n\nexport function getDefaultValue(\n  props: any,\n  propKey: any,\n  defaultStateValues = dropdownDefaultStateValues\n) {\n  const defaultPropKey = `default${capitalizeString(propKey)}`;\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n  //@ts-ignore\n  return defaultStateValues[propKey];\n}\n"]},"metadata":{},"sourceType":"module"}