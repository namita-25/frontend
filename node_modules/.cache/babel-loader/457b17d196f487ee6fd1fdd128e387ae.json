{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props, ref) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const {\n    setBodyMounted,\n    bodyId\n  } = useContext(PopoverContext);\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    nativeID: bodyId\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(PopoverBody));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;EACnD,MAAMC,aAAa,GAAGb,kBAAkB,CAAC,aAAD,EAAgBW,KAAhB,CAAxC;EACA,MAAM;IAAEG,cAAF;IAAkBC;EAAlB,IAA6Bb,UAAU,CAACM,cAAD,CAA7C;EAEAH,SAAS,CAAC,MAAM;IACdS,cAAc,CAAC,IAAD,CAAdA;IACA,OAAO,MAAM;MACXA,cAAc,CAAC,KAAD,CAAdA;IADF;EAFO,GAKN,CAACA,cAAD,CALM,CAATT,CAJmD,CAWnD;;EACA,IAAII,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOV,oBAACM,GAAD;IAAKS,QAAQ,EAAED;EAAf,GAA2BF,aAA3B;IAA0CD,GAAG,EAAEA;EAA/C,GAAP;AAfF;;AAkBA,4BAAeT,IAAI,eAACC,UAAU,CAACM,WAAD,CAAX,CAAnB","names":["usePropsResolution","React","useContext","memo","forwardRef","useEffect","default","Box","PopoverContext","useHasResponsiveProps","PopoverBody","props","ref","resolvedProps","setBodyMounted","bodyId","nativeID"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Popover/PopoverBody.tsx"],"sourcesContent":["import { usePropsResolution } from '../../../hooks';\nimport React, { useContext, memo, forwardRef, useEffect } from 'react';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverBody = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverBody', props);\n  const { setBodyMounted, bodyId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setBodyMounted(true);\n    return () => {\n      setBodyMounted(false);\n    };\n  }, [setBodyMounted]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={bodyId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverBody));\n"]},"metadata":{},"sourceType":"module"}