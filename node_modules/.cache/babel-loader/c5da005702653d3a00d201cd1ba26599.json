{"ast":null,"code":"import { getColor, getColorScheme, transparentize } from '../tools';\n\nfunction getBg(props) {\n  const {\n    theme,\n    colorScheme: c,\n    status,\n    variant\n  } = props;\n  const colorScheme = getColorScheme(props, !status ? c : status);\n  const lightBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".700\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".200\"), colorScheme);\n  const darkBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".600\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".200\"), colorScheme);\n  return {\n    lightBg,\n    darkBg\n  };\n}\n\nconst variantSubtle = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  const {\n    lightBg,\n    darkBg\n  } = getBg(props);\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n  return {\n    bg: lightBg,\n    _icon: {\n      color: \"\".concat(colorScheme, \".700\")\n    },\n    _dark: {\n      bg: darkBg,\n      _icon: {\n        color: \"\".concat(colorScheme, \".600\")\n      }\n    }\n  };\n};\n\nconst variantOutline = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    _icon: {\n      color: \"\".concat(colorScheme, \".700\")\n    },\n    borderColor: \"\".concat(colorScheme, \".700\"),\n    _dark: {\n      _icon: {\n        color: \"\".concat(colorScheme, \".600\")\n      },\n      borderColor: \"\".concat(colorScheme, \".600\")\n    }\n  };\n};\n\nconst variantOutlineLight = props => {\n  let {\n    colorScheme,\n    status,\n    theme\n  } = props;\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    _icon: {\n      color: \"\".concat(colorScheme, \".700\")\n    },\n    borderColor: transparentize(\"\".concat(colorScheme, \".700\"), 0.4)(theme),\n    _dark: {\n      _icon: {\n        color: \"\".concat(colorScheme, \".600\")\n      },\n      borderColor: transparentize(\"\".concat(colorScheme, \".600\"), 0.4)(theme)\n    }\n  };\n};\n\nconst variantSolid = props => {\n  const {\n    lightBg,\n    darkBg\n  } = getBg(props);\n  return {\n    bg: lightBg,\n    _dark: {\n      bg: darkBg\n    },\n    _icon: {\n      color: \"muted.50\"\n    }\n  };\n};\n\nconst variantLeftAccent = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  const {\n    lightBg,\n    darkBg\n  } = getBg(props);\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n  return {\n    borderLeftWidth: 4,\n    bg: lightBg,\n    _icon: {\n      color: \"\".concat(colorScheme, \".700\")\n    },\n    borderLeftColor: \"\".concat(colorScheme, \".700\"),\n    _dark: {\n      bg: darkBg,\n      _icon: {\n        color: \"\".concat(colorScheme, \".600\")\n      },\n      borderLeftColor: \"\".concat(colorScheme, \".600\")\n    }\n  };\n};\n\nconst variantTopAccent = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  const {\n    lightBg,\n    darkBg\n  } = getBg(props);\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n  return {\n    borderTopWidth: 4,\n    bg: lightBg,\n    _icon: {\n      color: \"\".concat(colorScheme, \".700\")\n    },\n    borderTopColor: \"\".concat(colorScheme, \".700\"),\n    _dark: {\n      bg: darkBg,\n      _icon: {\n        color: \"\".concat(colorScheme, \".600\")\n      },\n      borderTopColor: \"\".concat(colorScheme, \".600\")\n    }\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight\n};\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm'\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'info',\n    variant: 'subtle'\n  }\n}; // AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4\n  }\n};","map":{"version":3,"mappings":"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","names":["getColor","getColorScheme","transparentize","getBg","props","theme","colorScheme","c","status","variant","lightBg","darkBg","variantSubtle","bg","_icon","color","_dark","variantOutline","borderWidth","borderColor","variantOutlineLight","variantSolid","variantLeftAccent","borderLeftWidth","borderLeftColor","variantTopAccent","borderTopWidth","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/theme/components/alert.ts"],"sourcesContent":["import { getColor, getColorScheme, transparentize } from '../tools';\nimport type { InterfaceAlertProps } from '../../components/composites/Alert/types';\nfunction getBg(\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) {\n  const { theme, colorScheme: c, status, variant } = props;\n\n  const colorScheme = getColorScheme(props, !status ? c : status);\n\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n\n  return { lightBg, darkBg };\n}\n\nconst variantSubtle = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status } = props;\n  const { lightBg, darkBg } = getBg(props);\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    bg: lightBg,\n    _icon: { color: `${colorScheme}.700` },\n    _dark: {\n      bg: darkBg,\n      _icon: { color: `${colorScheme}.600` },\n    },\n  };\n};\n\nconst variantOutline = (props: InterfaceAlertProps & { colorScheme: any }) => {\n  let { colorScheme, status } = props;\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderWidth: 1,\n    _icon: { color: `${colorScheme}.700` },\n    borderColor: `${colorScheme}.700`,\n    _dark: {\n      _icon: { color: `${colorScheme}.600` },\n      borderColor: `${colorScheme}.600`,\n    },\n  };\n};\n\nconst variantOutlineLight = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status, theme } = props;\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderWidth: 1,\n    _icon: { color: `${colorScheme}.700` },\n    borderColor: transparentize(`${colorScheme}.700`, 0.4)(theme),\n    _dark: {\n      _icon: { color: `${colorScheme}.600` },\n      borderColor: transparentize(`${colorScheme}.600`, 0.4)(theme),\n    },\n  };\n};\n\nconst variantSolid = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  const { lightBg, darkBg } = getBg(props);\n  return {\n    bg: lightBg,\n    _dark: {\n      bg: darkBg,\n    },\n    _icon: { color: `muted.50` },\n  };\n};\n\nconst variantLeftAccent = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status } = props;\n  const { lightBg, darkBg } = getBg(props);\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderLeftWidth: 4,\n    bg: lightBg,\n    _icon: { color: `${colorScheme}.700` },\n    borderLeftColor: `${colorScheme}.700`,\n    _dark: {\n      bg: darkBg,\n      _icon: { color: `${colorScheme}.600` },\n      borderLeftColor: `${colorScheme}.600`,\n    },\n  };\n};\n\nconst variantTopAccent = (\n  props: InterfaceAlertProps & { theme: any } & { colorScheme: any }\n) => {\n  let { colorScheme, status } = props;\n  const { lightBg, darkBg } = getBg(props);\n\n  colorScheme = getColorScheme(props, !status ? colorScheme : status);\n\n  return {\n    borderTopWidth: 4,\n    bg: lightBg,\n    _icon: { color: `${colorScheme}.700` },\n    borderTopColor: `${colorScheme}.700`,\n    _dark: {\n      bg: darkBg,\n      _icon: { color: `${colorScheme}.600` },\n      borderTopColor: `${colorScheme}.600`,\n    },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle as any,\n  'solid': variantSolid as any,\n  'left-accent': variantLeftAccent as any,\n  'top-accent': variantTopAccent as any,\n  'outline': variantOutline as any,\n  'outline-light': variantOutlineLight as any,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'info',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}