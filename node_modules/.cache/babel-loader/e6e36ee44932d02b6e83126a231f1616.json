{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Code = (_ref, ref) => {\n  let { ...props\n  } = _ref;\n  let { ...newProps\n  } = useThemeProps('Code', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    _text: {\n      fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace'\n    }\n  }, newProps, {\n    ref: ref\n  }));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Code));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,IAAI,GAAG,OAA2BC,GAA3B,KAAyC;EAAA,IAAxC,EAAE,GAAGC;EAAL,CAAwC;EACpD,IAAI,EAAE,GAAGC;EAAL,IAAkBN,aAAa,CAAC,MAAD,EAASK,KAAT,CAAnC,CADoD,CAEpD;;EACA,IAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACEP,oBAACG,GAAD;IACEM,KAAK,EAAE;MACLC,UAAU,EAAET,QAAQ,CAACU,EAATV,KAAgB,KAAhBA,GAAwB,SAAxBA,GAAoC;IAD3C;EADT,GAIMO,QAJN;IAKEF,GAAG,EAAEA;EALP,GADF;AANF;;AAkBA,4BAAeN,KAAK,CAACY,IAANZ,eAAWA,KAAK,CAACa,UAANb,CAAiBK,IAAjBL,CAAXA,CAAf","names":["React","Platform","useThemeProps","Box","useHasResponsiveProps","Code","ref","props","newProps","_text","fontFamily","OS","memo","forwardRef"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Code/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ICodeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Code = ({ ...props }: ICodeProps, ref?: any) => {\n  let { ...newProps } = useThemeProps('Code', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      _text={{\n        fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',\n      }}\n      {...newProps}\n      ref={ref}\n    />\n  );\n};\n\nexport type { ICodeProps };\nexport default React.memo(React.forwardRef(Code));\n"]},"metadata":{},"sourceType":"module"}