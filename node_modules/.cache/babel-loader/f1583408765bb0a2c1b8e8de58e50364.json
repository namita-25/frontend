{"ast":null,"code":"import React from 'react';\n\nfunction createContext(rootComponentName) {\n  const Context = /*#__PURE__*/React.createContext(null);\n\n  function Provider(props) {\n    const {\n      children,\n      ...providerProps\n    } = props; // Only re-memoize when prop values change\n\n    const value = React.useMemo(() => providerProps, // eslint-disable-next-line react-hooks/exhaustive-deps\n    Object.values(providerProps));\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n\n  function useContext(consumerName) {\n    const context = React.useContext(Context);\n\n    if (context === null) {\n      throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n    }\n\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}\n\nexport { createContext };","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CACEC,iBADF,EAEE;EACA,MAAMC,OAAO,gBAAGH,KAAK,CAACC,aAAND,CAAsC,IAAtCA,CAAhB;;EAEA,SAASI,QAAT,CAAkBC,KAAlB,EAA2E;IACzE,MAAM;MAAEC,QAAF;MAAY,GAAGC;IAAf,IAAiCF,KAAvC,CADyE,CAEzE;;IACA,MAAMG,KAAK,GAAGR,KAAK,CAACS,OAANT,CACZ,MAAMO,aADMP,EAEZ;IACAU,MAAM,CAACC,MAAPD,CAAcH,aAAdG,CAHYV,CAAd;IAKA,oBAAOA,oBAACG,OAAD,CAASC,QAAT;MAAkBI,KAAK,EAAEA;IAAzB,GAAiCF,QAAjC,CAAP;EACD;;EAED,SAASM,UAAT,CAAoBC,YAApB,EAA0C;IACxC,MAAMC,OAAO,GAAGd,KAAK,CAACY,UAANZ,CAAiBG,OAAjBH,CAAhB;;IACA,IAAIc,OAAO,KAAK,IAAhB,EAAsB;MACpB,MAAM,IAAIC,KAAJ,YACCF,YADD,oCACyCX,iBADzC,OAAN;IAGD;;IACD,OAAOY,OAAP;EACD;;EAEDV,QAAQ,CAACY,WAATZ,GAAuBF,iBAAiB,GAAG,UAA3CE;EACA,OAAO,CAACA,QAAD,EAAWQ,UAAX,CAAP;AACD;;AAED,SAASX,aAAT","names":["React","createContext","rootComponentName","Context","Provider","props","children","providerProps","value","useMemo","Object","values","useContext","consumerName","context","Error","displayName"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/utils/createContext.tsx"],"sourcesContent":["import React from 'react';\n\nfunction createContext<ContextValueType extends object>(\n  rootComponentName: string\n) {\n  const Context = React.createContext<ContextValueType>(null as any);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...providerProps } = props;\n    // Only re-memoize when prop values change\n    const value = React.useMemo(\n      () => providerProps,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Object.values(providerProps)\n    ) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context === null) {\n      throw new Error(\n        `\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``\n      );\n    }\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\nexport { createContext };\n"]},"metadata":{},"sourceType":"module"}