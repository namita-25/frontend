{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { NBStepper } from './NumberInputStepper';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberIncrementStepper = (_ref, ref) => {\n  let {\n    children,\n    isDisabled: pIsDisabled,\n    ...props\n  } = _ref;\n  const {\n    numberInputValue = 0,\n    step = 1,\n    max = +Infinity,\n    handleChange,\n    ...context\n  } = React.useContext(NumberInputContext);\n  const isDisabled = pIsDisabled || context.isDisabled;\n\n  const pressHandler = () => {\n    handleChange && handleChange(numberInputValue + step);\n  }; //TODO: refactor for responsive prop\n\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NBStepper, _extends({\n    isIncrement: true,\n    isDisabled: isDisabled,\n    pressHandler: pressHandler,\n    disablitityCheck: numberInputValue + step > max\n  }, props, {\n    ref: ref\n  }), children);\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(NumberIncrementStepper));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,sBAAsB,GAAG,OAE7BC,GAF6B,KAG1B;EAAA,IAFH;IAAEC,QAAF;IAAYC,UAAU,EAAEC,WAAxB;IAAqC,GAAGC;EAAxC,CAEG;EACH,MAAM;IACJC,gBAAgB,GAAG,CADf;IAEJC,IAAI,GAAG,CAFH;IAGJC,GAAG,GAAG,CAACC,QAHH;IAIJC,YAJI;IAKJ,GAAGC;EALC,IAMmBf,KAAK,CAACgB,UAANhB,CAAiBE,kBAAjBF,CANzB;EAQA,MAAMO,UAAU,GAAGC,WAAW,IAAIO,OAAO,CAACR,UAA1C;;EACA,MAAMU,YAAY,GAAG,MAAM;IACzBH,YAAY,IAAIA,YAAY,CAACJ,gBAAgB,GAAGC,IAApB,CAA5BG;EADF,EAVG,CAaH;;;EACA,IAAIX,qBAAqB,CAACM,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACET,oBAACC,SAAD;IACEiB,WAAW,MADb;IAEEX,UAAU,EAAEA,UAFd;IAGEU,YAAY,EAAEA,YAHhB;IAIEE,gBAAgB,EAAET,gBAAgB,GAAGC,IAAnBD,GAA0BE;EAJ9C,GAKMH,KALN;IAMEJ,GAAG,EAAEA;EANP,IAQGC,QARH,CADF;AApBF;;AAiCA,4BAAeN,KAAK,CAACoB,IAANpB,eAAWA,KAAK,CAACqB,UAANrB,CAAiBI,sBAAjBJ,CAAXA,CAAf","names":["React","NBStepper","NumberInputContext","useHasResponsiveProps","NumberIncrementStepper","ref","children","isDisabled","pIsDisabled","props","numberInputValue","step","max","Infinity","handleChange","context","useContext","pressHandler","isIncrement","disablitityCheck","memo","forwardRef"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/NumberInput/NumberIncrementStepper.tsx"],"sourcesContent":["import React from 'react';\nimport type { INumberInputContext, INumberInputStepperProps } from './types';\nimport { NBStepper } from './NumberInputStepper';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberIncrementStepper = (\n  { children, isDisabled: pIsDisabled, ...props }: INumberInputStepperProps,\n  ref?: any\n) => {\n  const {\n    numberInputValue = 0,\n    step = 1,\n    max = +Infinity,\n    handleChange,\n    ...context\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  const isDisabled = pIsDisabled || context.isDisabled;\n  const pressHandler = () => {\n    handleChange && handleChange(numberInputValue + step);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <NBStepper\n      isIncrement\n      isDisabled={isDisabled}\n      pressHandler={pressHandler}\n      disablitityCheck={numberInputValue + step > max}\n      {...props}\n      ref={ref}\n    >\n      {children}\n    </NBStepper>\n  );\n};\nexport default React.memo(React.forwardRef(NumberIncrementStepper));\n"]},"metadata":{},"sourceType":"module"}