{"ast":null,"code":"import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nfunction getSelectionColor(props) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = props => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props),\n      _web: {\n        disabled: true,\n        cursor: 'not-allowed'\n      }\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props)\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props)\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg',\n      // Todo: Move to _web inside size so that sm and xs don't have this much height\n      outline: 'none',\n      cursor: 'auto'\n    },\n    _stack: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      // justifyContent: 'space-between',\n      overflow: 'hidden'\n    },\n    _input: {\n      bg: 'transparent',\n      flex: 1\n    }\n  };\n};\n\nfunction roundedStyle(props) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction outlineStyle(props) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props)\n    }\n  };\n}\n\nfunction filledStyle(props) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props)\n    }\n  };\n}\n\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0'\n  };\n}\n\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1'\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle\n};\nconst sizes = {\n  '2xl': {\n    fontSize: 'xl'\n  },\n  'xl': {\n    fontSize: 'lg'\n  },\n  'lg': {\n    fontSize: 'md'\n  },\n  'md': {\n    fontSize: 'sm'\n  },\n  'sm': {\n    fontSize: 'xs'\n  },\n  'xs': {\n    fontSize: '2xs'\n  }\n};\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline'\n}; // Input\n\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes\n};\nexport default {};","map":{"version":3,"mappings":"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","names":["mode","Platform","getSelectionColor","props","OS","baseStyle","selectionColor","fontFamily","p","borderRadius","overflow","color","placeholderTextColor","borderColor","_disabled","opacity","bg","_web","disabled","cursor","_invalid","_focus","outlineWidth","lineHeight","outline","_stack","flexDirection","alignItems","_input","flex","roundedStyle","borderWidth","_hover","outlineStyle","filledStyle","unstyledStyle","underlinedStyle","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","variants","underlined","rounded","filled","unstyled","sizes","fontSize","defaultProps","size","variant","Input"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/theme/v33x-theme/components/input.ts"],"sourcesContent":["import { mode } from '../tools';\nimport { Platform } from 'react-native';\n\nfunction getSelectionColor(props: Record<string, any>) {\n  if (Platform.OS === 'ios') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  } else if (Platform.OS === 'android') {\n    return mode('coolGray.800', 'warmGray.50')(props);\n  }\n}\n\nconst baseStyle = (props: Record<string, any>) => {\n  // const { primary } = props.theme.colors;\n  // Todo: Resolve boxShadow Color or Provide some alternatiove prop for user to change focusRing color\n  // // Todo: Update to support similar focusRing on iOS , Android and Web\n  // const focusRing =\n  //   Platform.OS === 'web'\n  //     ? {\n  //         boxShadow:\n  //           props.variant !== 'underlined'\n  //             ? `${primary[400]} 0px 0px 0px 1px`\n  //             : `${primary[400]} 0px 1px 0px 0px`,\n  //         zIndex: 1,\n  //       }\n  //     : {\n  //         // boxShadow: `${useToken('colors', ['primary.400'])} 0px 0px 0px 1px`,\n  //       };\n\n  return {\n    selectionColor: getSelectionColor(props),\n    fontFamily: 'body',\n    p: '2',\n    borderRadius: 'sm',\n    overflow: 'hidden',\n    color: mode('coolGray.800', 'warmGray.50')(props),\n    placeholderTextColor: 'muted.400',\n    borderColor: mode('muted.200', 'gray.500')(props),\n    _disabled: {\n      opacity: '80',\n      bg: mode('muted.100', 'muted.700')(props),\n      _web: {\n        disabled: true,\n        cursor: 'not-allowed',\n      },\n    },\n    _invalid: {\n      borderColor: mode('danger.600', 'danger.300')(props),\n    },\n    _focus: {\n      borderColor: mode('primary.400', 'primary.500')(props),\n    },\n    _web: {\n      outlineWidth: '0',\n      overflow: 'auto',\n      lineHeight: 'lg', // Todo: Move to _web inside size so that sm and xs don't have this much height\n      outline: 'none',\n      cursor: 'auto',\n    },\n    _stack: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      // justifyContent: 'space-between',\n      overflow: 'hidden',\n    },\n    _input: {\n      bg: 'transparent',\n      flex: 1,\n    },\n  };\n};\n\nfunction roundedStyle(props: Record<string, any>) {\n  return {\n    borderRadius: '25',\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props),\n    },\n  };\n}\nfunction outlineStyle(props: Record<string, any>) {\n  return {\n    borderWidth: '1',\n    _hover: {\n      bg: mode('gray.100', 'gray.700')(props),\n    },\n  };\n}\nfunction filledStyle(props: Record<string, any>) {\n  return {\n    bg: props.bg || mode('muted.200', 'muted.600')(props),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    _hover: {\n      bg: mode('muted.300', 'muted.700')(props),\n    },\n  };\n}\nfunction unstyledStyle() {\n  return {\n    borderWidth: '0',\n  };\n}\nfunction underlinedStyle() {\n  return {\n    borderRadius: '0',\n    borderTopWidth: '0',\n    borderLeftWidth: '0',\n    borderRightWidth: '0',\n    borderBottomWidth: '1',\n  };\n}\n\nconst variants = {\n  outline: outlineStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle,\n};\n\nconst sizes = {\n  '2xl': { fontSize: 'xl' },\n  'xl': { fontSize: 'lg' },\n  'lg': { fontSize: 'md' },\n  'md': { fontSize: 'sm' },\n  'sm': { fontSize: 'xs' },\n  'xs': { fontSize: '2xs' },\n};\n\nconst defaultProps = {\n  size: 'sm',\n  variant: 'outline',\n};\n\n// Input\nexport const Input = {\n  baseStyle,\n  defaultProps,\n  variants,\n  sizes,\n};\n\nexport default {};\n"]},"metadata":{},"sourceType":"module"}