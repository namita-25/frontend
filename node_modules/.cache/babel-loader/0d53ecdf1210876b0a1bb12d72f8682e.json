{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props, ref) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const {\n    setHeaderMounted,\n    headerId\n  } = useContext(PopoverContext);\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    nativeID: headerId\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(PopoverHeader));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;EACrD,MAAMC,aAAa,GAAGR,kBAAkB,CAAC,eAAD,EAAkBM,KAAlB,CAAxC;EACA,MAAM;IAAEG,gBAAF;IAAoBC;EAApB,IAAiCX,UAAU,CAACI,cAAD,CAAjD;EAEAL,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAAC,IAAD,CAAhBA;IACA,OAAO,MAAM;MACXA,gBAAgB,CAAC,KAAD,CAAhBA;IADF;EAFO,GAKN,CAACA,gBAAD,CALM,CAATX,CAJqD,CAUrD;;EACA,IAAIM,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOX,oBAACO,GAAD;IAAKS,QAAQ,EAAED;EAAf,GAA6BF,aAA7B;IAA4CD,GAAG,EAAEA;EAAjD,GAAP;AAdF;;AAiBA,4BAAeX,IAAI,eAACC,UAAU,CAACQ,aAAD,CAAX,CAAnB","names":["React","memo","forwardRef","useEffect","useContext","usePropsResolution","default","Box","PopoverContext","useHasResponsiveProps","PopoverHeader","props","ref","resolvedProps","setHeaderMounted","headerId","nativeID"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Popover/PopoverHeader.tsx"],"sourcesContent":["import React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={headerId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"module"}