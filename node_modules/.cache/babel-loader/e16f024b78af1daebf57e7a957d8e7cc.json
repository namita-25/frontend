{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport SVGIcon from './SVGIcon';\nimport { Path } from './nbSvg';\nimport isEmpty from 'lodash.isempty';\nexport const createIcon = _ref => {\n  let {\n    path,\n    d,\n    ...initialProps\n  } = _ref;\n\n  const createdIcon = (props, ref) => {\n    let children = path;\n\n    if (d && (!path || isEmpty(path))) {\n      children = /*#__PURE__*/React.createElement(Path, {\n        fill: \"currentColor\",\n        d: d\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SVGIcon, _extends({\n      children: children\n    }, initialProps, props, {\n      ref: ref\n    }));\n  };\n\n  return /*#__PURE__*/memo( /*#__PURE__*/forwardRef(createdIcon));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAoD;EAAA,IAAnD;IAAEC,IAAF;IAAQC,CAAR;IAAW,GAAGC;EAAd,CAAmD;;EAC5E,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAaC,GAAb,KAA0B;IAC5C,IAAIC,QAAQ,GAAGN,IAAf;;IACA,IAAIC,CAAC,KAAK,CAACD,IAAD,IAASF,OAAO,CAACE,IAAD,CAArB,CAAL,EAAmC;MACjCM,QAAQ,gBAAGb,oBAACI,IAAD;QAAMU,IAAI,EAAC,cAAX;QAA0BN,CAAC,EAAEA;MAA7B,EAAXK;IACD;;IACD,oBACEb,oBAACG,OAAD;MAASU,QAAQ,EAAEA;IAAnB,GAAiCJ,YAAjC,EAAmDE,KAAnD;MAA0DC,GAAG,EAAEA;IAA/D,GADF;EALF;;EASA,oBAAOX,IAAI,eAACC,UAAU,CAACQ,WAAD,CAAX,CAAX;AAVK","names":["React","memo","forwardRef","SVGIcon","Path","isEmpty","createIcon","path","d","initialProps","createdIcon","props","ref","children","fill"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/primitives/Icon/createIcon.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport SVGIcon from './SVGIcon';\nimport { Path } from './nbSvg';\nimport type { IcreateIconProps } from './types';\nimport isEmpty from 'lodash.isempty';\n\nexport const createIcon = ({ path, d, ...initialProps }: IcreateIconProps) => {\n  const createdIcon = (props: any, ref: any) => {\n    let children = path;\n    if (d && (!path || isEmpty(path))) {\n      children = <Path fill=\"currentColor\" d={d} />;\n    }\n    return (\n      <SVGIcon children={children} {...initialProps} {...props} ref={ref} />\n    );\n  };\n  return memo(forwardRef(createdIcon));\n};\n"]},"metadata":{},"sourceType":"module"}