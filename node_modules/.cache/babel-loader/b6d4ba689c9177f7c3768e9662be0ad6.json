{"ast":null,"code":"import { theme as defaultTheme } from './../theme';\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport function extendTheme(overrides) {\n  function customizer(source, override) {\n    if (isFunction(source)) {\n      return function () {\n        const sourceValue = source(...arguments);\n        const overrideValue = isFunction(override) ? override(...arguments) : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n\n    return undefined;\n  }\n\n  for (var _len = arguments.length, restOverrides = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restOverrides[_key - 1] = arguments[_key];\n  }\n\n  const finalOverrides = [overrides, ...restOverrides].reduce((prevValue, currentValue) => {\n    return mergeWith({}, prevValue, currentValue, customizer);\n  }, defaultTheme);\n  return finalOverrides;\n}","map":{"version":3,"mappings":"AAAA,SAASA,KAAK,IAAIC,YAAlB,QAA6C,YAA7C;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAAyC;EACvC,OAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD;;AAID,OAAO,SAASC,WAAT,CACLC,SADK,EAGL;EACA,SAASC,UAAT,CAAoBC,MAApB,EAAiCC,QAAjC,EAAgD;IAC9C,IAAIN,UAAU,CAACK,MAAD,CAAd,EAAwB;MACtB,OAAO,YAAoB;QACzB,MAAME,WAAW,GAAGF,MAAM,CAAC,YAAD,CAA1B;QACA,MAAMG,aAAa,GAAGR,UAAU,CAACM,QAAD,CAAVN,GAClBM,QAAQ,CAAC,YAAD,CADUN,GAElBM,QAFJ;QAGA,OAAOP,SAAS,CAAC,EAAD,EAAKQ,WAAL,EAAkBC,aAAlB,EAAiCJ,UAAjC,CAAhB;MALF;IAOD;;IACD,OAAOK,SAAP;EACD;;EAZD,kCADGC,aACH;IADGA,aACH;EAAA;;EAcA,MAAMC,cAAc,GAAG,CAACR,SAAD,EAAY,GAAGO,aAAf,EAA8BE,MAA9B,CACrB,CAACC,SAAD,EAAYC,YAAZ,KAA6B;IAC3B,OAAOf,SAAS,CAAC,EAAD,EAAKc,SAAL,EAAgBC,YAAhB,EAA8BV,UAA9B,CAAhB;EAFmB,GAIrBN,YAJqB,CAAvB;EAOA,OAAOa,cAAP;AACD","names":["theme","defaultTheme","mergeWith","isFunction","value","extendTheme","overrides","customizer","source","override","sourceValue","overrideValue","undefined","restOverrides","finalOverrides","reduce","prevValue","currentValue"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/core/extendTheme.tsx"],"sourcesContent":["import { theme as defaultTheme, Theme } from './../theme';\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\ntype ThemeUtil = Theme | (Record<string, any> & {});\n\nexport function extendTheme<T extends ThemeUtil>(\n  overrides: T,\n  ...restOverrides: T[]\n) {\n  function customizer(source: any, override: any) {\n    if (isFunction(source)) {\n      return (...args: any[]) => {\n        const sourceValue = source(...args);\n        const overrideValue = isFunction(override)\n          ? override(...args)\n          : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n    return undefined;\n  }\n\n  const finalOverrides = [overrides, ...restOverrides].reduce(\n    (prevValue, currentValue) => {\n      return mergeWith({}, prevValue, currentValue, customizer);\n    },\n    defaultTheme\n  );\n\n  return finalOverrides as T & Theme;\n}\n"]},"metadata":{},"sourceType":"module"}