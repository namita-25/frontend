{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverFooter = (props, ref) => {\n  const resolvedProps = usePropsResolution('PopoverFooter', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(PopoverFooter));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAmBC,GAAnB,KAAiC;EACrD,MAAMC,aAAa,GAAGP,kBAAkB,CAAC,eAAD,EAAkBK,KAAlB,CAAxC,CADqD,CAErD;;EACA,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOR,oBAACK,GAAD,eAASK,aAAT;IAAwBD,GAAG,EAAEA;EAA7B,GAAP;AANF;;AASA,4BAAeR,IAAI,eAACC,UAAU,CAACK,aAAD,CAAX,CAAnB","names":["React","memo","forwardRef","usePropsResolution","default","Box","useHasResponsiveProps","PopoverFooter","props","ref","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Popover/PopoverFooter.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverFooter = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverFooter));\n"]},"metadata":{},"sourceType":"module"}