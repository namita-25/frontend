{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props, ref) => {\n  const {\n    children,\n    isCurrent,\n    _text,\n    ...remainingProps\n  } = props; //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    React.createElement(BreadcrumbItemContext.Provider, {\n      value: {\n        isCurrent\n      }\n    }, /*#__PURE__*/React.createElement(HStack, _extends({}, remainingProps, {\n      ref: ref\n    }), React.Children.map(children, (child, index) => /*#__PURE__*/React.cloneElement(child, {\n      'key': \"breadcrumb-item-\".concat(index),\n      '_text': { ..._text,\n        //taken out empty _text prop from props\n        fontWeight: 700\n      },\n      ...{\n        isUnderlined: false\n      },\n      ...remainingProps,\n      'aria-current': Platform.OS === 'web' && isCurrent ? 'page' : undefined\n    }))))\n  );\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(BreadcrumbItem));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,qBAAT,QAAsC,WAAtC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAA8BC,GAA9B,KAA4C;EACjE,MAAM;IAAEC,QAAF;IAAYC,SAAZ;IAAuBC,KAAvB;IAA8B,GAAGC;EAAjC,IAAoDL,KAA1D,CADiE,CAEjE;;EACA,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD;IAAA;IACE;IACAR,oBAACK,qBAAD,CAAuBS,QAAvB;MAAgCC,KAAK,EAAE;QAAEJ;MAAF;IAAvC,gBACEX,oBAACI,MAAD,eAAYS,cAAZ;MAA4BJ,GAAG,EAAEA;IAAjC,IACGT,KAAK,CAACgB,QAANhB,CAAeiB,GAAfjB,CAAmBU,QAAnBV,EAA6B,CAACkB,KAAD,EAAaC,KAAb,kBAC5BnB,KAAK,CAACoB,YAANpB,CAAmBkB,KAAnBlB,EAA0B;MACxB,iCAA0BmB,KAA1B,CADwB;MAExB,SAAS,EACP,GAAGP,KADI;QACG;QACVS,UAAU,EAAE;MAFL,CAFe;MAMxB,GAAG;QACDC,YAAY,EAAE;MADb,CANqB;MASxB,GAAGT,cATqB;MAUxB,gBACEV,QAAQ,CAACoB,EAATpB,KAAgB,KAAhBA,IAAyBQ,SAAzBR,GAAqC,MAArCA,GAA8CqB;IAXxB,CAA1BxB,CADDA,CADH,CADF;EAFF;AANF;;AA8BA,4BAAeE,IAAI,eAACD,UAAU,CAACM,cAAD,CAAX,CAAnB","names":["React","forwardRef","memo","Platform","HStack","BreadcrumbItemContext","useHasResponsiveProps","BreadcrumbItem","props","ref","children","isCurrent","_text","remainingProps","Provider","value","Children","map","child","index","cloneElement","fontWeight","isUnderlined","OS","undefined"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Breadcrumb/BreadcrumbItem.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport type { IBreadcrumbItemProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrent, _text, ...remainingProps } = props;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    <BreadcrumbItemContext.Provider value={{ isCurrent }}>\n      <HStack {...remainingProps} ref={ref}>\n        {React.Children.map(children, (child: any, index: number) =>\n          React.cloneElement(child, {\n            'key': `breadcrumb-item-${index}`,\n            '_text': {\n              ..._text, //taken out empty _text prop from props\n              fontWeight: 700,\n            },\n            ...{\n              isUnderlined: false,\n            },\n            ...remainingProps,\n            'aria-current':\n              Platform.OS === 'web' && isCurrent ? 'page' : undefined,\n          })\n        )}\n      </HStack>\n    </BreadcrumbItemContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbItem));\n"]},"metadata":{},"sourceType":"module"}