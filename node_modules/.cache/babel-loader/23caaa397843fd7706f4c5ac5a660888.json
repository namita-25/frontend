{"ast":null,"code":"import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const isDomUsable = canUseDom();\n  const {\n    in: animationState,\n    duration,\n    offsetX,\n    offsetY\n  } = useThemeProps('SlideFade', props);\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetX && Animated.timing(slideAnimX, {\n        toValue: offsetX,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetY && Animated.timing(slideAnimY, {\n        toValue: offsetY,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  animationState ? animIn() : animOut(); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [{\n      opacity: fadeAnim,\n      transform: [{\n        translateX: slideAnimX,\n        translateY: slideAnimY\n      }]\n    }],\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Box, props, children));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(SlideFade));","map":{"version":3,"mappings":"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","names":["React","Box","useThemeProps","Animated","Platform","canUseDom","useHasResponsiveProps","SlideFade","ref","children","props","isDomUsable","in","animationState","duration","offsetX","offsetY","fadeAnim","useRef","Value","current","slideAnimX","slideAnimY","animIn","timing","toValue","useNativeDriver","OS","start","animOut","View","style","opacity","transform","translateX","translateY","memo","forwardRef"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Transitions/SlideFade.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps, ref?: any) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n      ref={ref}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(React.forwardRef(SlideFade));\n"]},"metadata":{},"sourceType":"module"}