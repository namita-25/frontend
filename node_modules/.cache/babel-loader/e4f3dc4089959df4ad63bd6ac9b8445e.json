{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport StackMain from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst VStack = (props, ref) => {\n  const resolvedProps = usePropsResolution('VStack', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StackMain, _extends({\n    ref: ref\n  }, resolvedProps));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(VStack));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAA+C,SAA/C;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAaA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAsBC,GAAtB,KAAoC;EACjD,MAAMC,aAAa,GAAGL,kBAAkB,CAAC,QAAD,EAAWG,KAAX,CAAxC,CADiD,CAEjD;;EACA,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOP,oBAACG,SAAD;IAAWK,GAAG,EAAEA;EAAhB,GAAyBC,aAAzB,EAAP;AANF;;AASA,4BAAeR,IAAI,eAACC,UAAU,CAACI,MAAD,CAAX,CAAnB","names":["React","memo","forwardRef","StackMain","usePropsResolution","useHasResponsiveProps","VStack","props","ref","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/primitives/Stack/VStack.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport StackMain, { InterfaceStackProps } from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { CustomProps, ResponsiveValue } from '../../types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface InterfaceVStackProps extends InterfaceStackProps {\n  /**\n   * The direction of the Stack Items.\n   * @default column\n   */\n  direction?: ResponsiveValue<\n    'column' | 'row' | 'column-reverse' | 'row-reverse'\n  >;\n}\n\nexport type IVStackProps = InterfaceVStackProps & CustomProps<'VStack'>;\n\nconst VStack = (props: IVStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('VStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StackMain ref={ref} {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(VStack));\n"]},"metadata":{},"sourceType":"module"}