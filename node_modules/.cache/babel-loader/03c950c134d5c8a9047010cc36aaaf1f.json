{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution'; // Add breadcrumbText as child of breadcrumbItem for implementaion of isCurrent prop\n\nconst BreadcrumbText = (props, ref) => {\n  const {\n    isCurrent\n  } = React.useContext(BreadcrumbItemContext);\n  let {\n    children,\n    _current,\n    ...resolvedProps\n  } = usePropsResolution('BreadcrumbText', props);\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    ref: ref\n  }, isCurrent && _current, resolvedProps), children);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(BreadcrumbText));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,qBAAT,QAAsC,WAAtC;AACA,SAASC,kBAAT,QAAmC,iDAAnC,C,CAEA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAA8BC,GAA9B,KAA4C;EACjE,MAAM;IAAEC;EAAF,IAAwCT,KAAK,CAACU,UAANV,CAC5CI,qBAD4CJ,CAA9C;EAGA,IAAI;IAAEW,QAAF;IAAYC,QAAZ;IAAsB,GAAGC;EAAzB,IAA2CR,kBAAkB,CAC/D,gBAD+D,EAE/DE,KAF+D,CAAjE;EAIA,oBACEP,oBAACG,IAAD;IAAMK,GAAG,EAAEA;EAAX,GAAqBC,SAAS,IAAIG,QAAlC,EAAiDC,aAAjD,GACGF,QADH,CADF;AARF;;AAeA,4BAAeT,IAAI,eAACD,UAAU,CAACK,cAAD,CAAX,CAAnB","names":["React","forwardRef","memo","Text","BreadcrumbItemContext","usePropsResolution","BreadcrumbText","props","ref","isCurrent","useContext","children","_current","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Breadcrumb/BreadcrumbText.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport type { IBreadcrumbItemContext, IBreadcrumbTextProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbText as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbText = (props: IBreadcrumbTextProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbText',\n    props\n  );\n  return (\n    <Text ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Text>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbText));\n"]},"metadata":{},"sourceType":"module"}