{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, { createContext, useState, useMemo } from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useKeyboardBottomInset } from '../../../utils';\nconst INSET = 50;\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0\n  },\n  'top-right': {\n    top: INSET,\n    right: 0\n  },\n  'top-left': {\n    top: INSET,\n    left: 0\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0\n  }\n};\nconst initialAnimationOffset = 24;\nconst transitionConfig = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset\n};\nconst ToastContext = /*#__PURE__*/createContext({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {}\n});\n\nconst CustomToast = _ref => {\n  let {\n    _overlay,\n    _stack,\n    _presenceTransition\n  } = _ref;\n  const {\n    toastInfo,\n    visibleToasts,\n    removeToast\n  } = React.useContext(ToastContext);\n  const bottomInset = useKeyboardBottomInset() * 2;\n\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map(position => {\n    var _toastInfo$position;\n\n    if (((_toastInfo$position = toastInfo[position]) === null || _toastInfo$position === void 0 ? void 0 : _toastInfo$position.length) > 0) hasToastOnOverlay = true;\n  });\n  return getPositions().length > 0 ? /*#__PURE__*/React.createElement(Overlay, _extends({}, _overlay, {\n    isOpen: hasToastOnOverlay,\n    isKeyboardDismissable: false\n  }), getPositions().map(position => {\n    if (Object.keys(POSITIONS).includes(position)) return /*#__PURE__*/React.createElement(VStack, _extends({}, _stack, {\n      key: position // @ts-ignore\n\n    }, POSITIONS[position]), // @ts-ignore\n    toastInfo[position].map(toast => {\n      var _toast$config3;\n\n      return /*#__PURE__*/React.createElement(PresenceTransition, _extends({}, _presenceTransition, {\n        key: toast.id,\n        visible: visibleToasts[toast.id],\n        onTransitionComplete: status => {\n          if (status === 'exited') {\n            var _toast$config, _toast$config2;\n\n            removeToast(toast.id);\n            ((_toast$config = toast.config) === null || _toast$config === void 0 ? void 0 : _toast$config.onCloseComplete) && ((_toast$config2 = toast.config) === null || _toast$config2 === void 0 ? void 0 : _toast$config2.onCloseComplete());\n          }\n        },\n        initial: {\n          opacity: 0,\n          translateY: transitionConfig[position]\n        }\n      }), /*#__PURE__*/React.createElement(SafeAreaView, null, /*#__PURE__*/React.createElement(Box, {\n        bottom: ['bottom', 'bottom-left', 'bottom-right'].includes(position) && (_toast$config3 = toast.config) !== null && _toast$config3 !== void 0 && _toast$config3.avoidKeyboard ? bottomInset + 'px' : undefined\n      }, toast.component)));\n    }));else return null;\n  })) : null;\n};\n\nexport const ToastProvider = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  const [toastInfo, setToastInfo] = useState({});\n  const [visibleToasts, setVisibleToasts] = useState({});\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n  const hideToast = React.useCallback(id => {\n    setVisibleToasts(prevVisibleToasts => ({ ...prevVisibleToasts,\n      [id]: false\n    }));\n  }, [setVisibleToasts]);\n  const isActive = React.useCallback(id => {\n    for (const toastPosition of Object.keys(toastInfo)) {\n      const positionArray = toastInfo[toastPosition];\n      return positionArray.findIndex(toastData => toastData.id === id) > -1;\n    }\n\n    return false;\n  }, [toastInfo]);\n  const removeToast = React.useCallback(id => {\n    setToastInfo(prev => {\n      for (const toastPosition of Object.keys(prev)) {\n        const positionArray = prev[toastPosition];\n        const isToastPresent = positionArray.findIndex(toastData => toastData.id === id) > -1;\n\n        if (isToastPresent) {\n          const newPositionArray = positionArray.filter(item => item.id !== id);\n          const temp = {};\n          temp[toastPosition] = newPositionArray;\n          const newToastInfo = { ...prev,\n            ...temp\n          };\n          return newToastInfo;\n        }\n      }\n\n      return prev;\n    });\n  }, [setToastInfo]);\n  const setToast = React.useCallback(props => {\n    const {\n      placement = 'bottom',\n      title,\n      render,\n      id = toastIndex.current++,\n      description,\n      duration = 5000,\n      _title,\n      _description,\n      accessibilityAnnouncement,\n      // @ts-ignore\n      avoidKeyboard = false,\n      //eslint-disable-line\n      ...rest\n    } = props;\n    let positionToastArray = toastInfo[placement];\n    if (!positionToastArray) positionToastArray = [];\n    let component = null;\n\n    if (render) {\n      component = render({\n        id\n      });\n    } else {\n      component =\n      /*#__PURE__*/\n      // Below VStack is the default component where all the direct props spread.\n      React.createElement(VStack, _extends({}, themeProps, rest), /*#__PURE__*/React.createElement(Box, {\n        _text: { ...themeProps._title,\n          ..._title\n        }\n      }, title), description && /*#__PURE__*/React.createElement(Box, {\n        _text: { ...themeProps._description,\n          ..._description\n        }\n      }, description));\n    }\n\n    toastInfo[placement] = [...positionToastArray, {\n      component,\n      id,\n      config: props\n    }];\n    setToastInfo({ ...toastInfo\n    });\n    setVisibleToasts({ ...visibleToasts,\n      [id]: true\n    });\n\n    if (duration !== null) {\n      setTimeout(function () {\n        hideToast(id);\n      }, duration);\n    } // iOS doesn't support accessibilityLiveRegion\n\n\n    if (accessibilityAnnouncement && Platform.OS === 'ios') {\n      AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n    }\n\n    return id;\n  }, [themeProps, toastInfo, visibleToasts, hideToast]);\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast\n    };\n  }, [toastInfo, setToastInfo, setToast, removeToast, hideAll, isActive, visibleToasts, setVisibleToasts, hideToast]);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: contextValue\n  }, children, /*#__PURE__*/React.createElement(CustomToast, {\n    _overlay: themeProps._overlay,\n    _stack: themeProps._stack,\n    _presenceTransition: themeProps._presenceTransition\n  }));\n};\nexport const useToast = () => {\n  const {\n    setToast,\n    hideAll,\n    isActive,\n    hideToast\n  } = React.useContext(ToastContext);\n  const toast = useMemo(() => ({\n    show: setToast,\n    close: hideToast,\n    closeAll: hideAll,\n    isActive\n  }), [setToast, hideAll, isActive, hideToast]);\n  return toast;\n};\nexport const ToastRef = /*#__PURE__*/React.createRef();\nexport const Toast = {\n  show: props => {\n    var _ToastRef$current;\n\n    return (_ToastRef$current = ToastRef.current) === null || _ToastRef$current === void 0 ? void 0 : _ToastRef$current.show(props);\n  },\n  close: id => {\n    var _ToastRef$current2;\n\n    return (_ToastRef$current2 = ToastRef.current) === null || _ToastRef$current2 === void 0 ? void 0 : _ToastRef$current2.close(id);\n  },\n  closeAll: () => {\n    var _ToastRef$current3;\n\n    return (_ToastRef$current3 = ToastRef.current) === null || _ToastRef$current3 === void 0 ? void 0 : _ToastRef$current3.closeAll();\n  },\n  isActive: id => {\n    var _ToastRef$current4;\n\n    return (_ToastRef$current4 = ToastRef.current) === null || _ToastRef$current4 === void 0 ? void 0 : _ToastRef$current4.isActive(id);\n  }\n};","map":{"version":3,"mappings":"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","names":["Overlay","PresenceTransition","VStack","React","createContext","useState","useMemo","AccessibilityInfo","Platform","SafeAreaView","Box","usePropsResolution","useKeyboardBottomInset","INSET","POSITIONS","top","left","right","bottom","initialAnimationOffset","transitionConfig","ToastContext","toastInfo","setToastInfo","setToast","removeToast","hideAll","isActive","visibleToasts","setVisibleToasts","hideToast","CustomToast","_overlay","_stack","_presenceTransition","useContext","bottomInset","getPositions","Object","keys","hasToastOnOverlay","map","position","length","isOpen","isKeyboardDismissable","includes","key","toast","id","visible","onTransitionComplete","status","config","onCloseComplete","_toast$config2","initial","opacity","translateY","_toast$config3","avoidKeyboard","undefined","component","ToastProvider","children","themeProps","toastIndex","useRef","useCallback","prevVisibleToasts","toastPosition","positionArray","findIndex","toastData","prev","isToastPresent","newPositionArray","filter","item","temp","newToastInfo","props","placement","title","render","current","description","duration","_title","_description","accessibilityAnnouncement","rest","positionToastArray","_text","setTimeout","OS","announceForAccessibility","contextValue","Provider","value","useToast","show","close","closeAll","ToastRef","createRef","Toast","_ToastRef$current","_ToastRef$current2","_ToastRef$current3","_ToastRef$current4"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Toast/Toast.tsx"],"sourcesContent":["import { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, {\n  createContext,\n  MutableRefObject,\n  useState,\n  useMemo,\n} from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IToastContext, IToastInfo, IToast, IToastProps } from './types';\nimport { useKeyboardBottomInset } from '../../../utils';\n\nconst INSET = 50;\n\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0,\n  },\n  'top-right': {\n    top: INSET,\n    right: 0,\n  },\n  'top-left': {\n    top: INSET,\n    left: 0,\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0,\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0,\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0,\n  },\n};\n\nconst initialAnimationOffset = 24;\n\nconst transitionConfig: any = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset,\n};\n\nconst ToastContext = createContext<IToastContext>({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {},\n});\n\nconst CustomToast = ({ _overlay, _stack, _presenceTransition }: any) => {\n  const { toastInfo, visibleToasts, removeToast } = React.useContext(\n    ToastContext\n  );\n\n  const bottomInset = useKeyboardBottomInset() * 2;\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map((position) => {\n    if (toastInfo[position]?.length > 0) hasToastOnOverlay = true;\n  });\n\n  return getPositions().length > 0 ? (\n    <Overlay\n      {..._overlay}\n      isOpen={hasToastOnOverlay}\n      isKeyboardDismissable={false}\n    >\n      {getPositions().map((position: string) => {\n        if (Object.keys(POSITIONS).includes(position))\n          return (\n            <VStack\n              {..._stack}\n              key={position}\n              // @ts-ignore\n              {...POSITIONS[position]}\n            >\n              {\n                // @ts-ignore\n                toastInfo[position].map((toast: IToast) => (\n                  <PresenceTransition\n                    {..._presenceTransition}\n                    key={toast.id}\n                    visible={visibleToasts[toast.id]}\n                    onTransitionComplete={(status: any) => {\n                      if (status === 'exited') {\n                        removeToast(toast.id);\n                        toast.config?.onCloseComplete &&\n                          toast.config?.onCloseComplete();\n                      }\n                    }}\n                    initial={{\n                      opacity: 0,\n                      translateY: transitionConfig[position],\n                    }}\n                  >\n                    <SafeAreaView>\n                      <Box\n                        bottom={\n                          ['bottom', 'bottom-left', 'bottom-right'].includes(\n                            position\n                          ) && toast.config?.avoidKeyboard\n                            ? bottomInset + 'px'\n                            : undefined\n                        }\n                      >\n                        {toast.component}\n                      </Box>\n                    </SafeAreaView>\n                  </PresenceTransition>\n                ))\n              }\n            </VStack>\n          );\n        else return null;\n      })}\n    </Overlay>\n  ) : null;\n};\n\nexport const ToastProvider = ({ children }: { children: any }) => {\n  const [toastInfo, setToastInfo] = useState<IToastInfo>({});\n  const [visibleToasts, setVisibleToasts] = useState<\n    {\n      [key in string]: boolean;\n    }\n  >({});\n\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n\n  const hideToast = React.useCallback(\n    (id: any) => {\n      setVisibleToasts((prevVisibleToasts) => ({\n        ...prevVisibleToasts,\n        [id]: false,\n      }));\n    },\n    [setVisibleToasts]\n  );\n\n  const isActive = React.useCallback(\n    (id: any) => {\n      for (const toastPosition of Object.keys(toastInfo)) {\n        const positionArray: Array<IToast> = toastInfo[toastPosition];\n        return positionArray.findIndex((toastData) => toastData.id === id) > -1;\n      }\n\n      return false;\n    },\n    [toastInfo]\n  );\n\n  const removeToast = React.useCallback(\n    (id: any) => {\n      setToastInfo((prev) => {\n        for (const toastPosition of Object.keys(prev)) {\n          const positionArray: Array<IToast> = prev[toastPosition];\n          const isToastPresent =\n            positionArray.findIndex((toastData) => toastData.id === id) > -1;\n\n          if (isToastPresent) {\n            const newPositionArray = positionArray.filter(\n              (item) => item.id !== id\n            );\n            const temp: any = {};\n            temp[toastPosition] = newPositionArray;\n\n            const newToastInfo = { ...prev, ...temp };\n            return newToastInfo;\n          }\n        }\n\n        return prev;\n      });\n    },\n    [setToastInfo]\n  );\n\n  const setToast = React.useCallback(\n    (props: IToastProps): number => {\n      const {\n        placement = 'bottom',\n        title,\n        render,\n        id = toastIndex.current++,\n        description,\n        duration = 5000,\n        _title,\n        _description,\n        accessibilityAnnouncement,\n        // @ts-ignore\n        avoidKeyboard = false, //eslint-disable-line\n        ...rest\n      } = props;\n\n      let positionToastArray = toastInfo[placement];\n      if (!positionToastArray) positionToastArray = [];\n\n      let component = null;\n\n      if (render) {\n        component = render({ id });\n      } else {\n        component = (\n          // Below VStack is the default component where all the direct props spread.\n          <VStack {...themeProps} {...rest}>\n            <Box _text={{ ...themeProps._title, ..._title }}>{title}</Box>\n            {description && (\n              <Box _text={{ ...themeProps._description, ..._description }}>\n                {description}\n              </Box>\n            )}\n          </VStack>\n        );\n      }\n\n      toastInfo[placement] = [\n        ...positionToastArray,\n        { component, id, config: props },\n      ];\n\n      setToastInfo({ ...toastInfo });\n\n      setVisibleToasts({ ...visibleToasts, [id]: true });\n      if (duration !== null) {\n        setTimeout(function () {\n          hideToast(id);\n        }, duration);\n      }\n\n      // iOS doesn't support accessibilityLiveRegion\n      if (accessibilityAnnouncement && Platform.OS === 'ios') {\n        AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n      }\n\n      return id;\n    },\n    [themeProps, toastInfo, visibleToasts, hideToast]\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast,\n    };\n  }, [\n    toastInfo,\n    setToastInfo,\n    setToast,\n    removeToast,\n    hideAll,\n    isActive,\n    visibleToasts,\n    setVisibleToasts,\n    hideToast,\n  ]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <CustomToast\n        _overlay={themeProps._overlay}\n        _stack={themeProps._stack}\n        _presenceTransition={themeProps._presenceTransition}\n      />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const { setToast, hideAll, isActive, hideToast } = React.useContext(\n    ToastContext\n  );\n\n  const toast = useMemo(\n    () => ({\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive,\n    }),\n    [setToast, hideAll, isActive, hideToast]\n  );\n\n  return toast;\n};\n\nexport type IToastService = ReturnType<typeof useToast>;\n\nexport const ToastRef = React.createRef<IToastService>() as MutableRefObject<IToastService>;\n\nexport const Toast: IToastService = {\n  show: (props: IToastProps) => ToastRef.current?.show(props),\n  close: (id: any) => ToastRef.current?.close(id),\n  closeAll: () => ToastRef.current?.closeAll(),\n  isActive: (id: any) => ToastRef.current?.isActive(id),\n};\n"]},"metadata":{},"sourceType":"module"}