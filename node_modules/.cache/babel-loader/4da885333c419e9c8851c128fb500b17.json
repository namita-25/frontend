{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { useOverlayPosition } from '@react-native-aria/overlays';\nimport { StyleSheet, View } from 'react-native';\nimport { createContext } from '../../../utils';\nimport Box from '../../primitives/Box'; // import { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst defaultArrowHeight = 15;\nconst defaultArrowWidth = 15;\n\nconst getDiagonalLength = (height, width) => {\n  return Math.pow(height * height + width * width, 0.5);\n};\n\nconst [PopperProvider, usePopperContext] = createContext('PopperContext');\n\nconst Popper = props => {\n  return /*#__PURE__*/React.createElement(PopperProvider, props, props.children);\n};\n\nconst PopperContent = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    children,\n    style,\n    ...rest\n  } = _ref;\n  const {\n    triggerRef,\n    shouldFlip,\n    crossOffset,\n    offset,\n    placement: placementProp,\n    onClose,\n    shouldOverlapWithTrigger,\n    setOverlayRef\n  } = usePopperContext('PopperContent');\n  const overlayRef = React.useRef(null); // const { top } = useSafeAreaInsets();\n\n  const {\n    overlayProps,\n    rendered,\n    arrowProps,\n    placement\n  } = useOverlayPosition({\n    targetRef: triggerRef,\n    overlayRef,\n    shouldFlip: shouldFlip,\n    crossOffset: crossOffset,\n    isOpen: rest.isOpen,\n    offset: offset,\n    placement: placementProp,\n    containerPadding: 0,\n    onClose: onClose,\n    shouldOverlapWithTrigger\n  });\n  const restElements = [];\n  let arrowElement = null;\n  React.useEffect(() => {\n    setOverlayRef && setOverlayRef(overlayRef);\n  }, [overlayRef, setOverlayRef]); // Might have performance impact if there are a lot of siblings!\n  // Shouldn't be an issue with popovers since it would have atmost 2. Arrow and Content.\n\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child) && // @ts-ignore\n    child.type.displayName === 'PopperArrow') {\n      arrowElement = /*#__PURE__*/React.cloneElement(child, {\n        // @ts-ignore\n        arrowProps,\n        actualPlacement: placement\n      });\n    } else {\n      restElements.push(child);\n    }\n  });\n  let arrowHeight = 0;\n  let arrowWidth = 0;\n\n  if (arrowElement) {\n    arrowHeight = defaultArrowHeight;\n    arrowWidth = defaultArrowWidth; //@ts-ignore\n\n    if (arrowElement.props.height) {\n      //@ts-ignore\n      arrowHeight = arrowElement.props.height;\n    } //@ts-ignore\n\n\n    if (arrowElement.props.width) {\n      //@ts-ignore\n      arrowWidth = arrowElement.props.width;\n    }\n  }\n\n  const containerStyle = React.useMemo(() => getContainerStyle({\n    placement,\n    arrowHeight,\n    arrowWidth\n  }), [arrowHeight, arrowWidth, placement]);\n  const overlayStyle = React.useMemo(() => StyleSheet.create({\n    overlay: { ...overlayProps.style,\n      // To handle translucent android StatusBar\n      // marginTop: Platform.select({ android: top, default: 0 }),\n      opacity: rendered ? 1 : 0,\n      position: 'absolute'\n    }\n  }), [rendered, overlayProps.style]); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(View, {\n    ref: overlayRef,\n    collapsable: false,\n    style: overlayStyle.overlay\n  }, arrowElement, /*#__PURE__*/React.createElement(Box, _extends({\n    style: StyleSheet.flatten([containerStyle, style])\n  }, rest, {\n    ref: ref\n  }), restElements));\n}); // This is an internal implementation of PopoverArrow\n\nconst PopperArrow = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    height = defaultArrowHeight,\n    width = defaultArrowWidth,\n    //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n    arrowProps,\n    //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n    actualPlacement,\n    style,\n    borderColor = '#52525b',\n    backgroundColor = 'black',\n    ...rest\n  } = _ref2;\n  const additionalStyles = React.useMemo(() => getArrowStyles({\n    placement: actualPlacement,\n    height,\n    width\n  }), [actualPlacement, height, width]);\n  const triangleStyle = React.useMemo(() => ({\n    position: 'absolute',\n    width,\n    height\n  }), [width, height]);\n  const arrowStyles = React.useMemo(() => [arrowProps.style, triangleStyle, additionalStyles, style], [triangleStyle, additionalStyles, arrowProps.style, style]);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    ref: ref,\n    style: arrowStyles,\n    borderColor: borderColor,\n    backgroundColor: backgroundColor,\n    zIndex: 1\n  }, rest));\n});\n\nconst getArrowStyles = props => {\n  const additionalStyles = {\n    transform: []\n  };\n  const diagonalLength = getDiagonalLength(defaultArrowHeight, defaultArrowHeight);\n\n  if (props.placement === 'top' && props.width) {\n    additionalStyles.transform.push({\n      translateX: -props.width / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.bottom = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'bottom' && props.width) {\n    additionalStyles.transform.push({\n      translateX: -props.width / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.top = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  if (props.placement === 'left' && props.height) {\n    additionalStyles.transform.push({\n      translateY: -props.height / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.right = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'right' && props.height) {\n    additionalStyles.transform.push({\n      translateY: -props.height / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.left = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  return additionalStyles;\n};\n\nconst getContainerStyle = _ref3 => {\n  let {\n    placement,\n    arrowHeight\n  } = _ref3;\n  const diagonalLength = getDiagonalLength(arrowHeight, arrowHeight) / 2;\n\n  if (placement === 'top') {\n    return {\n      marginBottom: diagonalLength\n    };\n  }\n\n  if (placement === 'bottom') {\n    return {\n      marginTop: diagonalLength\n    };\n  }\n\n  if (placement === 'left') {\n    return {\n      marginRight: diagonalLength\n    };\n  }\n\n  if (placement === 'right') {\n    return {\n      marginLeft: diagonalLength\n    };\n  }\n\n  return {};\n};\n\nPopperArrow.displayName = 'PopperArrow';\nPopper.Content = PopperContent;\nPopper.Arrow = PopperArrow;\nexport { Popper };","map":{"version":3,"mappings":"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","names":["React","useOverlayPosition","StyleSheet","View","createContext","Box","useHasResponsiveProps","defaultArrowHeight","defaultArrowWidth","getDiagonalLength","height","width","Math","pow","PopperProvider","usePopperContext","Popper","props","children","PopperContent","forwardRef","ref","style","rest","triggerRef","shouldFlip","crossOffset","offset","placement","placementProp","onClose","shouldOverlapWithTrigger","setOverlayRef","overlayRef","useRef","overlayProps","rendered","arrowProps","targetRef","isOpen","containerPadding","restElements","arrowElement","useEffect","Children","forEach","child","isValidElement","type","displayName","cloneElement","actualPlacement","push","arrowHeight","arrowWidth","containerStyle","useMemo","getContainerStyle","overlayStyle","create","overlay","opacity","position","collapsable","flatten","PopperArrow","borderColor","backgroundColor","additionalStyles","getArrowStyles","triangleStyle","arrowStyles","zIndex","transform","diagonalLength","translateX","rotate","bottom","ceil","borderBottomWidth","borderRightWidth","top","borderTopWidth","borderLeftWidth","translateY","right","left","marginBottom","marginTop","marginRight","marginLeft","Content","Arrow"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Popper/Popper.tsx"],"sourcesContent":["import React from 'react';\nimport { useOverlayPosition } from '@react-native-aria/overlays';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport type {\n  IPopperProps,\n  IScrollContentStyle,\n  IArrowStyles,\n  IPopoverArrowProps,\n} from './types';\nimport { createContext } from '../../../utils';\nimport Box, { IBoxProps } from '../../primitives/Box';\n// import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst defaultArrowHeight = 15;\nconst defaultArrowWidth = 15;\n\nconst getDiagonalLength = (height: number, width: number) => {\n  return Math.pow(height * height + width * width, 0.5);\n};\n\ntype PopperContext = IPopperProps & {\n  triggerRef: any;\n  onClose: any;\n  setOverlayRef?: (overlayRef: any) => void;\n};\n\nconst [PopperProvider, usePopperContext] = createContext<PopperContext>(\n  'PopperContext'\n);\n\nconst Popper = (\n  props: IPopperProps & {\n    triggerRef: any;\n    onClose: any;\n    setOverlayRef?: (overlayRef: any) => void;\n  }\n) => {\n  return <PopperProvider {...props}>{props.children}</PopperProvider>;\n};\n\nconst PopperContent = React.forwardRef(\n  ({ children, style, ...rest }: IBoxProps & { isOpen: boolean }, ref: any) => {\n    const {\n      triggerRef,\n      shouldFlip,\n      crossOffset,\n      offset,\n      placement: placementProp,\n      onClose,\n      shouldOverlapWithTrigger,\n      setOverlayRef,\n    } = usePopperContext('PopperContent');\n    const overlayRef = React.useRef(null);\n\n    // const { top } = useSafeAreaInsets();\n    const {\n      overlayProps,\n      rendered,\n      arrowProps,\n      placement,\n    } = useOverlayPosition({\n      targetRef: triggerRef,\n      overlayRef,\n      shouldFlip: shouldFlip,\n      crossOffset: crossOffset,\n      isOpen: rest.isOpen,\n      offset: offset,\n      placement: placementProp as any,\n      containerPadding: 0,\n      onClose: onClose,\n      shouldOverlapWithTrigger,\n    });\n\n    const restElements: React.ReactNode[] = [];\n    let arrowElement: React.ReactElement | null = null;\n\n    React.useEffect(() => {\n      setOverlayRef && setOverlayRef(overlayRef);\n    }, [overlayRef, setOverlayRef]);\n\n    // Might have performance impact if there are a lot of siblings!\n    // Shouldn't be an issue with popovers since it would have atmost 2. Arrow and Content.\n    React.Children.forEach(children, (child) => {\n      if (\n        React.isValidElement(child) &&\n        // @ts-ignore\n        child.type.displayName === 'PopperArrow'\n      ) {\n        arrowElement = React.cloneElement(child, {\n          // @ts-ignore\n          arrowProps,\n          actualPlacement: placement,\n        });\n      } else {\n        restElements.push(child);\n      }\n    });\n\n    let arrowHeight = 0;\n    let arrowWidth = 0;\n\n    if (arrowElement) {\n      arrowHeight = defaultArrowHeight;\n      arrowWidth = defaultArrowWidth;\n\n      //@ts-ignore\n      if (arrowElement.props.height) {\n        //@ts-ignore\n        arrowHeight = arrowElement.props.height;\n      }\n\n      //@ts-ignore\n      if (arrowElement.props.width) {\n        //@ts-ignore\n        arrowWidth = arrowElement.props.width;\n      }\n    }\n\n    const containerStyle = React.useMemo(\n      () =>\n        getContainerStyle({\n          placement,\n          arrowHeight,\n          arrowWidth,\n        }),\n      [arrowHeight, arrowWidth, placement]\n    );\n\n    const overlayStyle = React.useMemo(\n      () =>\n        StyleSheet.create({\n          overlay: {\n            ...overlayProps.style,\n            // To handle translucent android StatusBar\n            // marginTop: Platform.select({ android: top, default: 0 }),\n            opacity: rendered ? 1 : 0,\n            position: 'absolute',\n          },\n        }),\n      [rendered, overlayProps.style]\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(rest)) {\n      return null;\n    }\n\n    return (\n      <View ref={overlayRef} collapsable={false} style={overlayStyle.overlay}>\n        {arrowElement}\n        <Box\n          style={StyleSheet.flatten([containerStyle, style])}\n          {...rest}\n          ref={ref}\n        >\n          {restElements}\n        </Box>\n      </View>\n    );\n  }\n);\n\n// This is an internal implementation of PopoverArrow\nconst PopperArrow = React.forwardRef(\n  (\n    {\n      height = defaultArrowHeight,\n      width = defaultArrowWidth,\n\n      //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n      arrowProps,\n      //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n      actualPlacement,\n      style,\n      borderColor = '#52525b',\n      backgroundColor = 'black',\n      ...rest\n    }: IPopoverArrowProps & IBoxProps<IPopoverArrowProps>,\n    ref: any\n  ) => {\n    const additionalStyles = React.useMemo(\n      () => getArrowStyles({ placement: actualPlacement, height, width }),\n      [actualPlacement, height, width]\n    );\n\n    const triangleStyle: ViewStyle = React.useMemo(\n      () => ({\n        position: 'absolute',\n        width,\n        height,\n      }),\n      [width, height]\n    );\n\n    const arrowStyles = React.useMemo(\n      () => [arrowProps.style, triangleStyle, additionalStyles, style],\n      [triangleStyle, additionalStyles, arrowProps.style, style]\n    );\n\n    return (\n      <Box\n        ref={ref}\n        style={arrowStyles}\n        borderColor={borderColor}\n        backgroundColor={backgroundColor}\n        zIndex={1}\n        {...rest}\n      />\n    );\n  }\n);\n\nconst getArrowStyles = (props: IArrowStyles) => {\n  const additionalStyles: any = {\n    transform: [],\n  };\n\n  const diagonalLength = getDiagonalLength(\n    defaultArrowHeight,\n    defaultArrowHeight\n  );\n\n  if (props.placement === 'top' && props.width) {\n    additionalStyles.transform.push({ translateX: -props.width / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.bottom = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'bottom' && props.width) {\n    additionalStyles.transform.push({ translateX: -props.width / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.top = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  if (props.placement === 'left' && props.height) {\n    additionalStyles.transform.push({ translateY: -props.height / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.right = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'right' && props.height) {\n    additionalStyles.transform.push({ translateY: -props.height / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.left = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  return additionalStyles;\n};\n\nconst getContainerStyle = ({ placement, arrowHeight }: IScrollContentStyle) => {\n  const diagonalLength = getDiagonalLength(arrowHeight, arrowHeight) / 2;\n\n  if (placement === 'top') {\n    return { marginBottom: diagonalLength };\n  }\n\n  if (placement === 'bottom') {\n    return { marginTop: diagonalLength };\n  }\n\n  if (placement === 'left') {\n    return { marginRight: diagonalLength };\n  }\n\n  if (placement === 'right') {\n    return { marginLeft: diagonalLength };\n  }\n\n  return {};\n};\n\nPopperArrow.displayName = 'PopperArrow';\nPopper.Content = PopperContent;\nPopper.Arrow = PopperArrow;\n\nexport { Popper };\n"]},"metadata":{},"sourceType":"module"}