{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps } from '../../../utils';\nimport Text from '../../primitives/Text';\n\nconst FormControlErrorMessage = (props, ref) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const {\n    leftIcon,\n    rightIcon,\n    children,\n    _text,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid // isRequired: combinedProps.isRequired,\n\n  });\n  let {\n    startIcon,\n    endIcon\n  } = resolvedProps;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (endIcon && /*#__PURE__*/React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(endIcon, (child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"button-end-icon-\".concat(index),\n        ..._text,\n        ...child.props\n      });\n    });\n  }\n\n  if (startIcon && /*#__PURE__*/React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(startIcon, (child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"button-start-icon-\".concat(index),\n        ..._text,\n        ...child.props\n      });\n    });\n  }\n\n  React.useEffect(() => {\n    resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.setHasFeedbackText(true);\n    return () => {\n      resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.setHasFeedbackText(false);\n    };\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return resolvedProps !== null && resolvedProps !== void 0 && resolvedProps.isInvalid && children ? /*#__PURE__*/React.createElement(Box, _extends({\n    nativeID: resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.helpTextId\n  }, resolvedProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(HStack, _stack, startIcon, /*#__PURE__*/React.createElement(Text, _text, children), endIcon)) : null;\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(FormControlErrorMessage));","map":{"version":3,"mappings":"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","names":["React","memo","forwardRef","Box","HStack","usePropsResolution","useFormControlContext","useHasResponsiveProps","combineContextAndProps","Text","FormControlErrorMessage","props","ref","formControlContext","combinedProps","leftIcon","rightIcon","children","_text","_stack","resolvedProps","isDisabled","isReadOnly","isInvalid","startIcon","endIcon","isValidElement","Children","map","child","index","cloneElement","key","useEffect","setHasFeedbackText","nativeID","helpTextId"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/FormControl/FormControlErrorMessage.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlErrorMessageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps } from '../../../utils';\nimport Text from '../../primitives/Text';\n\nconst FormControlErrorMessage = (\n  props: IFormControlErrorMessageProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const {\n    leftIcon,\n    rightIcon,\n    children,\n    _text,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid,\n    // isRequired: combinedProps.isRequired,\n  });\n  let { startIcon, endIcon } = resolvedProps;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  React.useEffect(() => {\n    resolvedProps?.setHasFeedbackText(true);\n    return () => {\n      resolvedProps?.setHasFeedbackText(false);\n    };\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return resolvedProps?.isInvalid && children ? (\n    <Box nativeID={resolvedProps?.helpTextId} {...resolvedProps} ref={ref}>\n      <HStack {..._stack}>\n        {startIcon}\n        <Text {..._text}>{children}</Text>\n        {endIcon}\n      </HStack>\n    </Box>\n  ) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));\n"]},"metadata":{},"sourceType":"module"}