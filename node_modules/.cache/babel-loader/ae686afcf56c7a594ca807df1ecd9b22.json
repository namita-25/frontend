{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView } from '../../basic/ScrollView';\n\nconst ModalBody = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const {\n    _scrollview,\n    ...resolvedProps\n  } = usePropsResolution('ModalBody', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ScrollView, _scrollview, /*#__PURE__*/React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), children));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(ModalBody));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAA+B,sBAA/B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,UAAT,QAA6C,wBAA7C;;AAEA,MAAMC,SAAS,GAAG,OAEhBC,GAFgB,KAGb;EAAA,IAFH;IAAEC,QAAF;IAAY,GAAGC;EAAf,CAEG;EACH,MAAM;IAAEC,WAAF;IAAe,GAAGC;EAAlB,IAAoCR,kBAAkB,CAC1D,WAD0D,EAE1DM,KAF0D,CAA5D,CADG,CAKH;;EACA,IAAIL,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACEV,oBAACM,UAAD,EAAgBK,WAAhB,eACEX,oBAACG,GAAD,eAASS,aAAT;IAAwBJ,GAAG,EAAEA;EAA7B,IACGC,QADH,CADF,CADF;AAZF;;AAqBA,4BAAeR,IAAI,eAACC,UAAU,CAACK,SAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","ScrollView","ModalBody","ref","children","props","_scrollview","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Modal/ModalBody.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]},"metadata":{},"sourceType":"module"}