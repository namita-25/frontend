{"ast":null,"code":"import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport isEmpty from 'lodash.isempty';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport { propsFlattener, compareSpecificity } from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nconst SPREAD_PROP_SPECIFICITY_ORDER = ['p', 'padding', 'px', 'py', 'pt', 'pb', 'pl', 'pr', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'm', 'margin', 'mx', 'my', 'mt', 'mb', 'ml', 'mr', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst FINAL_SPREAD_PROPS = ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight', 'marginTop', 'marginBottom', 'marginLeft', 'marginRight'];\nconst MARGIN_MAP = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft']\n};\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\nconst PADDING_MAP = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft']\n};\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\nconst SPREAD_PROP_SPECIFICITY_MAP = { ...PADDING_MAP,\n  ...MARGIN_MAP\n};\n\nfunction propsSpreader(incomingProps, incomingSpecifity) {\n  const flattenedDefaultProps = { ...incomingProps\n  };\n  const specificity = {};\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach(prop => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach(newProp => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n  return merge({}, flattenedDefaultProps);\n}\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\n\n\nexport function usePropsResolution(component, incomingProps, state, config) {\n  var _config$componentThem;\n\n  const {\n    theme\n  } = useNativeBase();\n  const componentTheme = (_config$componentThem = config === null || config === void 0 ? void 0 : config.componentTheme) !== null && _config$componentThem !== void 0 ? _config$componentThem : get(theme, \"components.\".concat(component), {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%c\".concat(component), 'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log(\"%cusePropsResolution\", 'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;');\n    /* eslint-disable-next-line */\n\n    console.log('%c incomingProps: ', 'color: #4ade80; font-weight: 700;', incomingProps);\n    /* eslint-disable-next-line */\n\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n\n    console.log('%c componentTheme: ', 'color: #4ade80; font-weight: 700;', componentTheme);\n  }\n\n  const resolvedProps = usePropsResolutionWithComponentTheme(componentTheme, incomingProps, state, config); // Not Resolve theme props and pseudo props\n\n  if (incomingProps !== null && incomingProps !== void 0 && incomingProps.INTERNAL_notResolveThemeAndPseudoProps) {\n    delete incomingProps.INTERNAL_notResolveThemeAndPseudoProps;\n    return incomingProps;\n  }\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log('%c resolvedProps: ', 'color: #22d3ee; font-weight: 700;', resolvedProps);\n  }\n\n  return resolvedProps;\n}\nexport const usePropsResolutionWithComponentTheme = (componentTheme, incomingProps, state, config) => {\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n  const [ignoredProps, cleanIncomingProps] = extractInObject(modifiedPropsForSSR, ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat((config === null || config === void 0 ? void 0 : config.ignoreProps) || []));\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  const resolveResponsively = ['colorScheme', 'size', 'variant', ...((config === null || config === void 0 ? void 0 : config.resolveResponsively) || [])];\n  const {\n    theme\n  } = useNativeBase();\n  const colorModeProps = useColorMode();\n  const extendedTheme = [];\n\n  if (config !== null && config !== void 0 && config.extendTheme) {\n    config === null || config === void 0 ? void 0 : config.extendTheme.map(componentName => {\n      extendedTheme.push(get(theme, \"components.\".concat(componentName), {}));\n    });\n  }\n\n  if (!isEmpty(componentTheme)) extendedTheme.push(componentTheme);\n\n  const resolveComponentTheme = (themeType, providedTheme) => {\n    try {\n      if (themeType[1]) {\n        return typeof providedTheme[themeType[0]][themeType[1]] !== 'function' ? providedTheme[themeType[0]][themeType[1]] : providedTheme[themeType[0]][themeType[1]]({\n          theme,\n          ...incomingWithDefaultProps,\n          ...colorModeProps\n        });\n      } else {\n        return typeof providedTheme[themeType[0]] !== 'function' ? providedTheme[themeType[0]] : providedTheme[themeType[0]]({\n          theme,\n          ...incomingWithDefaultProps,\n          ...colorModeProps\n        });\n      }\n    } catch {\n      return {};\n    }\n  };\n\n  const callPropsFlattener = function () {\n    let targetProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let latestSpecifictyMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let specificity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return propsFlattener({\n      props: process.env.NODE_ENV === 'development' && cleanIncomingProps.debug ? { ...targetProps,\n        debug: true\n      } : targetProps,\n      platform: Platform.OS,\n      colormode: colorModeProps.colorMode,\n      state: state || {},\n      currentSpecificityMap: latestSpecifictyMap,\n      previouslyFlattenProps: flattenProps || {},\n      cascadePseudoProps: config === null || config === void 0 ? void 0 : config.cascadePseudoProps\n    }, specificity);\n  }; // STEP 1: combine default props and incoming props\n\n\n  const incomingWithDefaultProps = merge({}, componentTheme.defaultProps || {}, cleanIncomingProps); // STEP 1.5: resolving component theme\n\n  let combinedBaseStyle = {};\n  let combinedVariantStyle = {};\n  let combinedSizeStyle = {};\n  extendedTheme.map(extededComponentTheme => {\n    if (extededComponentTheme.baseStyle) {\n      combinedBaseStyle = { ...combinedBaseStyle,\n        ...resolveComponentTheme(['baseStyle'], extededComponentTheme)\n      };\n    }\n\n    if (incomingWithDefaultProps.variant) {\n      if (extededComponentTheme.variants) {\n        combinedVariantStyle = { ...combinedVariantStyle,\n          ...resolveComponentTheme(['variants', incomingWithDefaultProps.variant], extededComponentTheme)\n        };\n      }\n    }\n\n    if (incomingWithDefaultProps.size && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes && extededComponentTheme !== null && extededComponentTheme !== void 0 && extededComponentTheme.sizes[incomingWithDefaultProps.size]) {\n      if (typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] === 'string' || typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] === 'number') {\n        incomingWithDefaultProps.size = extededComponentTheme.sizes[incomingWithDefaultProps.size];\n      } else {\n        combinedSizeStyle = { ...combinedSizeStyle,\n          ...resolveComponentTheme(['sizes', incomingWithDefaultProps.size], extededComponentTheme)\n        };\n        incomingWithDefaultProps.size = undefined;\n      }\n    }\n  }); // STEP 2: flatten them\n\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\"%cFlattening incoming and Default\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n  } //TODO: hack\n\n\n  let flattenProps, specificityMap;\n  [flattenProps, specificityMap] = callPropsFlattener(incomingWithDefaultProps, {}, 2);\n  const responsiveProps = {};\n\n  if (disableCSSMediaQueries) {\n    // STEP 2.5: resolving responsive props\n    resolveResponsively.map(propsName => {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n\n  if (resolveResponsively.includes('direction')) {\n    const propName = 'direction';\n\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n  flattenProps = { ...flattenProps,\n    ...responsivelyResolvedProps\n  }; // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n  // NOTE: Resoloving baseStyle\n\n  let flattenBaseStyle, baseSpecificityMap;\n\n  if (combinedBaseStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening baseStyle\", 'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenBaseStyle, baseSpecificityMap] = callPropsFlattener(combinedBaseStyle, specificityMap);\n  } // NOTE: Resolving variants\n\n\n  let flattenVariantStyle, variantSpecificityMap; // Extracting props from variant\n\n  if (combinedVariantStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening variantStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenVariantStyle, variantSpecificityMap] = callPropsFlattener(combinedVariantStyle, baseSpecificityMap || specificityMap); // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n\n    flattenProps.variant = undefined;\n  } // NOTE: Resolving size\n\n\n  let flattenSizeStyle, sizeSpecificityMap; // Extracting props from size\n\n  if (combinedSizeStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\"%cFlattening sizeStyle\", 'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;');\n    }\n\n    [flattenSizeStyle, sizeSpecificityMap] = callPropsFlattener(combinedSizeStyle, variantSpecificityMap || baseSpecificityMap || specificityMap);\n  } // STEP 4: merge\n\n\n  const defaultStyles = merge({}, flattenBaseStyle, flattenVariantStyle, flattenSizeStyle);\n  /*Resolve all the internal used Pseudo Props*/\n\n  const resolvePseudoProps = (flatPseudoProp, baseStylePseudoProp) =>\n  /** Props coming from Pseudo inside defaultStyles(baseStyle) */\n  {\n    for (const prop in flatPseudoProp) {\n      baseStylePseudoProp[prop] = flatPseudoProp[prop];\n      /* Replace all the similar prop from from internal props */\n    }\n\n    return baseStylePseudoProp;\n  };\n\n  for (const prop in defaultStyles) {\n    if (prop.startsWith('_') && flattenProps.hasOwnProperty(prop)) {\n      /*Resolve all the internal used Pseudo Props*/\n      defaultStyles[prop] = resolvePseudoProps(flattenProps[prop], defaultStyles[prop]);\n    }\n\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge({}, specificityMap, baseSpecificityMap, variantSpecificityMap, sizeSpecificityMap);\n  flattenProps = propsSpreader({ ...defaultStyles,\n    ...flattenProps\n  }, defaultSpecificity);\n  const resolvedProps = omitUndefined({ ...flattenProps,\n    ...ignoredProps\n  }); // STEP 5: Return\n\n  return resolvedProps;\n};","map":{"version":3,"mappings":"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","names":["get","merge","isEmpty","Platform","useNativeBase","useColorMode","omitUndefined","extractInObject","useBreakpointResolvedProps","propsFlattener","compareSpecificity","useResponsiveSSRProps","React","ResponsiveQueryContext","SPREAD_PROP_SPECIFICITY_ORDER","FINAL_SPREAD_PROPS","MARGIN_MAP","mx","my","mt","mb","mr","ml","margin","m","marginTop","marginBottom","marginLeft","marginRight","PADDING_MAP","px","py","pt","pb","pr","pl","padding","p","paddingTop","paddingBottom","paddingLeft","paddingRight","SPREAD_PROP_SPECIFICITY_MAP","propsSpreader","incomingProps","incomingSpecifity","flattenedDefaultProps","specificity","forEach","prop","val","includes","newProp","usePropsResolution","component","state","config","theme","componentTheme","process","env","NODE_ENV","debug","console","log","resolvedProps","usePropsResolutionWithComponentTheme","INTERNAL_notResolveThemeAndPseudoProps","modifiedPropsForSSR","ignoredProps","cleanIncomingProps","concat","ignoreProps","responsiveQueryContext","useContext","disableCSSMediaQueries","resolveResponsively","colorModeProps","extendedTheme","extendTheme","map","componentName","push","resolveComponentTheme","themeType","providedTheme","incomingWithDefaultProps","callPropsFlattener","targetProps","latestSpecifictyMap","props","platform","OS","colormode","colorMode","currentSpecificityMap","previouslyFlattenProps","flattenProps","cascadePseudoProps","defaultProps","combinedBaseStyle","combinedVariantStyle","combinedSizeStyle","extededComponentTheme","baseStyle","variant","variants","size","sizes","undefined","specificityMap","responsiveProps","propsName","propName","responsivelyResolvedProps","flattenBaseStyle","baseSpecificityMap","flattenVariantStyle","variantSpecificityMap","flattenSizeStyle","sizeSpecificityMap","defaultStyles","resolvePseudoProps","flatPseudoProp","baseStylePseudoProp","startsWith","hasOwnProperty","defaultSpecificity"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/hooks/useThemeProps/usePropsResolution.tsx"],"sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport isEmpty from 'lodash.isempty';\nimport { Platform } from 'react-native';\nimport { useNativeBase } from '../useNativeBase';\nimport { useColorMode } from '../../core/color-mode';\nimport { omitUndefined, extractInObject } from '../../theme/tools';\nimport { useBreakpointResolvedProps } from '../useBreakpointResolvedProps';\nimport {\n  propsFlattener,\n  compareSpecificity,\n  IStateProps,\n} from './propsFlattener';\nimport { useResponsiveSSRProps } from '../useResponsiveSSRProps';\nimport React from 'react';\nimport { ResponsiveQueryContext } from '../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport type { ComponentTheme } from '../../theme';\n\nconst SPREAD_PROP_SPECIFICITY_ORDER = [\n  'p',\n  'padding',\n  'px',\n  'py',\n  'pt',\n  'pb',\n  'pl',\n  'pr',\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'm',\n  'margin',\n  'mx',\n  'my',\n  'mt',\n  'mb',\n  'ml',\n  'mr',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst FINAL_SPREAD_PROPS = [\n  'paddingTop',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'marginTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n];\n\nconst MARGIN_MAP: any = {\n  mx: ['marginRight', 'marginLeft'],\n  my: ['marginTop', 'marginBottom'],\n  mt: ['marginTop'],\n  mb: ['marginBottom'],\n  mr: ['marginRight'],\n  ml: ['marginLeft'],\n};\n\nMARGIN_MAP.margin = [...MARGIN_MAP.mx, ...MARGIN_MAP.my];\nMARGIN_MAP.m = MARGIN_MAP.margin;\nMARGIN_MAP.marginTop = MARGIN_MAP.mt;\nMARGIN_MAP.marginBottom = MARGIN_MAP.mb;\nMARGIN_MAP.marginLeft = MARGIN_MAP.ml;\nMARGIN_MAP.marginRight = MARGIN_MAP.mr;\n\nconst PADDING_MAP: any = {\n  px: ['paddingRight', 'paddingLeft'],\n  py: ['paddingTop', 'paddingBottom'],\n  pt: ['paddingTop'],\n  pb: ['paddingBottom'],\n  pr: ['paddingRight'],\n  pl: ['paddingLeft'],\n};\n\nPADDING_MAP.padding = [...PADDING_MAP.px, ...PADDING_MAP.py];\nPADDING_MAP.p = PADDING_MAP.padding;\nPADDING_MAP.paddingTop = PADDING_MAP.pt;\nPADDING_MAP.paddingBottom = PADDING_MAP.pb;\nPADDING_MAP.paddingLeft = PADDING_MAP.pl;\nPADDING_MAP.paddingRight = PADDING_MAP.pr;\n\nconst SPREAD_PROP_SPECIFICITY_MAP: any = {\n  ...PADDING_MAP,\n  ...MARGIN_MAP,\n};\n\nfunction propsSpreader(incomingProps: any, incomingSpecifity: any) {\n  const flattenedDefaultProps: any = { ...incomingProps };\n  const specificity: any = {};\n\n  SPREAD_PROP_SPECIFICITY_ORDER.forEach((prop) => {\n    if (prop in flattenedDefaultProps) {\n      const val = incomingProps[prop] || flattenedDefaultProps[prop];\n      if (!FINAL_SPREAD_PROPS.includes(prop)) {\n        delete flattenedDefaultProps[prop];\n        specificity[prop] = incomingSpecifity[prop];\n      }\n\n      SPREAD_PROP_SPECIFICITY_MAP[prop].forEach((newProp: string) => {\n        if (compareSpecificity(specificity[newProp], specificity[prop])) {\n          specificity[newProp] = incomingSpecifity[prop];\n          flattenedDefaultProps[newProp] = val;\n        }\n      });\n    }\n  });\n\n  return merge({}, flattenedDefaultProps);\n}\n\n/**\n * @summary Combines provided porps with component's theme props and resloves them.\n * @arg {string} component - Name of the component.\n * @arg {object} incomingProps - Props passed by the user.\n * @arg {object} state - dependent states.\n * @arg {object} config - configuration for resolution. Accepts key like ignoreProps, resolveResponsively.\n * @returns {object} Resolved and flattened props.\n */\nexport function usePropsResolution(\n  component: string,\n  incomingProps: any,\n  state?: IStateProps,\n  config?: {\n    componentTheme?: any;\n    resolveResponsively?: string[];\n    ignoreProps?: string[];\n    cascadePseudoProps?: boolean;\n    extendTheme?: string[];\n  }\n) {\n  const { theme } = useNativeBase();\n  const componentTheme =\n    config?.componentTheme ?? get(theme, `components.${component}`, {});\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\n      `%c${component}`,\n      'background: #d97706; color: #111; font-weight: 700; padding: 2px 8px;'\n    );\n    /* eslint-disable-next-line */\n    console.log(\n      `%cusePropsResolution`,\n      'background: #4b5563; color: #d97706; font-weight: 700; padding: 2px 8px;'\n    );\n    /* eslint-disable-next-line */\n    console.log(\n      '%c incomingProps: ',\n      'color: #4ade80; font-weight: 700;',\n      incomingProps\n    );\n    /* eslint-disable-next-line */\n    console.log('%c state: ', 'color: #4ade80; font-weight: 700;', state);\n    /* eslint-disable-next-line */\n    console.log(\n      '%c componentTheme: ',\n      'color: #4ade80; font-weight: 700;',\n      componentTheme\n    );\n  }\n\n  const resolvedProps = usePropsResolutionWithComponentTheme(\n    componentTheme,\n    incomingProps,\n    state,\n    config\n  );\n\n  // Not Resolve theme props and pseudo props\n  if (incomingProps?.INTERNAL_notResolveThemeAndPseudoProps) {\n    delete incomingProps.INTERNAL_notResolveThemeAndPseudoProps;\n    return incomingProps;\n  }\n\n  if (process.env.NODE_ENV === 'development' && incomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\n      '%c resolvedProps: ',\n      'color: #22d3ee; font-weight: 700;',\n      resolvedProps\n    );\n  }\n  return resolvedProps;\n}\n\nexport const usePropsResolutionWithComponentTheme = (\n  componentTheme: ComponentTheme,\n  incomingProps: any,\n  state?: IStateProps,\n  config?: {\n    componentTheme?: any;\n    resolveResponsively?: string[];\n    ignoreProps?: string[];\n    cascadePseudoProps?: boolean;\n    extendTheme?: string[];\n  }\n) => {\n  const modifiedPropsForSSR = useResponsiveSSRProps(incomingProps);\n\n  const [ignoredProps, cleanIncomingProps] = extractInObject(\n    modifiedPropsForSSR,\n    ['children', 'onPress', 'icon', 'onOpen', 'onClose'].concat(\n      config?.ignoreProps || []\n    )\n  );\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  const resolveResponsively = [\n    'colorScheme',\n    'size',\n    'variant',\n    ...(config?.resolveResponsively || []),\n  ];\n\n  const { theme } = useNativeBase();\n  const colorModeProps = useColorMode();\n\n  const extendedTheme: Array<any> = [];\n  if (config?.extendTheme) {\n    config?.extendTheme.map((componentName: string) => {\n      extendedTheme.push(get(theme, `components.${componentName}`, {}));\n    });\n  }\n  if (!isEmpty(componentTheme)) extendedTheme.push(componentTheme);\n\n  const resolveComponentTheme = (\n    themeType: Array<string>,\n    providedTheme: any\n  ): any => {\n    try {\n      if (themeType[1]) {\n        return typeof providedTheme[themeType[0]][themeType[1]] !== 'function'\n          ? providedTheme[themeType[0]][themeType[1]]\n          : providedTheme[themeType[0]][themeType[1]]({\n              theme,\n              ...incomingWithDefaultProps,\n              ...colorModeProps,\n            });\n      } else {\n        return typeof providedTheme[themeType[0]] !== 'function'\n          ? providedTheme[themeType[0]]\n          : providedTheme[themeType[0]]({\n              theme,\n              ...incomingWithDefaultProps,\n              ...colorModeProps,\n            });\n      }\n    } catch {\n      return {};\n    }\n  };\n  const callPropsFlattener = (\n    targetProps = {},\n    latestSpecifictyMap = {},\n    specificity = 1\n  ): any => {\n    return propsFlattener(\n      {\n        props:\n          process.env.NODE_ENV === 'development' && cleanIncomingProps.debug\n            ? { ...targetProps, debug: true }\n            : targetProps,\n        platform: Platform.OS,\n        colormode: colorModeProps.colorMode,\n        state: state || {},\n        currentSpecificityMap: latestSpecifictyMap,\n        previouslyFlattenProps: flattenProps || {},\n        cascadePseudoProps: config?.cascadePseudoProps,\n      },\n      specificity\n    );\n  };\n\n  // STEP 1: combine default props and incoming props\n\n  const incomingWithDefaultProps = merge(\n    {},\n    componentTheme.defaultProps || {},\n    cleanIncomingProps\n  );\n\n  // STEP 1.5: resolving component theme\n  let combinedBaseStyle = {};\n  let combinedVariantStyle = {};\n  let combinedSizeStyle = {};\n  extendedTheme.map((extededComponentTheme: any) => {\n    if (extededComponentTheme.baseStyle) {\n      combinedBaseStyle = {\n        ...combinedBaseStyle,\n        ...resolveComponentTheme(['baseStyle'], extededComponentTheme),\n      };\n    }\n    if (incomingWithDefaultProps.variant) {\n      if (extededComponentTheme.variants) {\n        combinedVariantStyle = {\n          ...combinedVariantStyle,\n          ...resolveComponentTheme(\n            ['variants', incomingWithDefaultProps.variant],\n            extededComponentTheme\n          ),\n        };\n      }\n    }\n    if (\n      incomingWithDefaultProps.size &&\n      extededComponentTheme?.sizes &&\n      extededComponentTheme?.sizes[incomingWithDefaultProps.size]\n    ) {\n      if (\n        typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] ===\n          'string' ||\n        typeof extededComponentTheme.sizes[incomingWithDefaultProps.size] ===\n          'number'\n      ) {\n        incomingWithDefaultProps.size =\n          extededComponentTheme.sizes[incomingWithDefaultProps.size];\n      } else {\n        combinedSizeStyle = {\n          ...combinedSizeStyle,\n          ...resolveComponentTheme(\n            ['sizes', incomingWithDefaultProps.size],\n            extededComponentTheme\n          ),\n        };\n        incomingWithDefaultProps.size = undefined;\n      }\n    }\n  });\n\n  // STEP 2: flatten them\n  if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n    /* eslint-disable-next-line */\n    console.log(\n      `%cFlattening incoming and Default`,\n      'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;'\n    );\n  }\n  //TODO: hack\n  let flattenProps: any, specificityMap;\n  [flattenProps, specificityMap] = callPropsFlattener(\n    incomingWithDefaultProps,\n    {},\n    2\n  );\n  const responsiveProps = {};\n  if (disableCSSMediaQueries) {\n    // STEP 2.5: resolving responsive props\n    resolveResponsively.map((propsName) => {\n      if (flattenProps[propsName]) {\n        // @ts-ignore\n        responsiveProps[propsName] = flattenProps[propsName];\n      }\n    });\n  }\n  if (resolveResponsively.includes('direction')) {\n    const propName = 'direction';\n    if (flattenProps[propName]) {\n      // @ts-ignore\n      responsiveProps[propName] = flattenProps[propName];\n    }\n  }\n  const responsivelyResolvedProps = useBreakpointResolvedProps(responsiveProps);\n\n  flattenProps = {\n    ...flattenProps,\n    ...responsivelyResolvedProps,\n  };\n  // STEP 3: Pass it to baseStyle, then variant and then size and resolve them.\n\n  // NOTE: Resoloving baseStyle\n  let flattenBaseStyle, baseSpecificityMap;\n  if (combinedBaseStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cFlattening baseStyle`,\n        'background: #4b5563; color: #eee; font-weight: 700; padding: 2px 8px;'\n      );\n    }\n    [flattenBaseStyle, baseSpecificityMap] = callPropsFlattener(\n      combinedBaseStyle,\n      specificityMap\n    );\n  }\n\n  // NOTE: Resolving variants\n  let flattenVariantStyle, variantSpecificityMap;\n  // Extracting props from variant\n  if (combinedVariantStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cFlattening variantStyle`,\n        'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;'\n      );\n    }\n    [flattenVariantStyle, variantSpecificityMap] = callPropsFlattener(\n      combinedVariantStyle,\n      baseSpecificityMap || specificityMap\n    );\n\n    // We remove variant from original props if we found it in the componentTheme\n    //@ts-ignore\n    flattenProps.variant = undefined;\n  }\n\n  // NOTE: Resolving size\n\n  let flattenSizeStyle, sizeSpecificityMap;\n  // Extracting props from size\n  if (combinedSizeStyle) {\n    if (process.env.NODE_ENV === 'development' && cleanIncomingProps.debug) {\n      /* eslint-disable-next-line */\n      console.log(\n        `%cFlattening sizeStyle`,\n        'background: #4b5563; color: #FFF; font-weight: 700; padding: 2px 8px;'\n      );\n    }\n    [flattenSizeStyle, sizeSpecificityMap] = callPropsFlattener(\n      combinedSizeStyle,\n      variantSpecificityMap || baseSpecificityMap || specificityMap\n    );\n  }\n\n  // STEP 4: merge\n  const defaultStyles = merge(\n    {},\n    flattenBaseStyle,\n    flattenVariantStyle,\n    flattenSizeStyle\n  );\n\n  /*Resolve all the internal used Pseudo Props*/\n  const resolvePseudoProps = (\n    flatPseudoProp: any /** Props coming from Pseudo inside flattenProps */,\n    baseStylePseudoProp: any /** Props coming from Pseudo inside defaultStyles(baseStyle) */\n  ) => {\n    for (const prop in flatPseudoProp) {\n      baseStylePseudoProp[prop] =\n        flatPseudoProp[\n          prop\n        ]; /* Replace all the similar prop from from internal props */\n    }\n    return baseStylePseudoProp;\n  };\n\n  for (const prop in defaultStyles) {\n    if (prop.startsWith('_') && flattenProps.hasOwnProperty(prop)) {\n      /*Resolve all the internal used Pseudo Props*/\n      defaultStyles[prop] = resolvePseudoProps(\n        flattenProps[prop],\n        defaultStyles[prop]\n      );\n    }\n    delete flattenProps[prop];\n  }\n\n  const defaultSpecificity = merge(\n    {},\n    specificityMap,\n    baseSpecificityMap,\n    variantSpecificityMap,\n    sizeSpecificityMap\n  );\n\n  flattenProps = propsSpreader(\n    { ...defaultStyles, ...flattenProps },\n    defaultSpecificity\n  );\n\n  const resolvedProps = omitUndefined({\n    ...flattenProps,\n    ...ignoredProps,\n  });\n\n  // STEP 5: Return\n  return resolvedProps;\n};\n"]},"metadata":{},"sourceType":"module"}