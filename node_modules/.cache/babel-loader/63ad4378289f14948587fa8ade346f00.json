{"ast":null,"code":"import merge from 'lodash.merge';\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30; // SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\n\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [SPECIFICITY_1000, SPECIFICITY_110, SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_20, SPECIFICITY_10];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0\n};\nconst pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000\n  }\n};\nexport const compareSpecificity = (exisiting, upcoming, ignorebaseTheme) => // property?: any\n{\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n\n  for (let index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nconst shouldResolvePseudoProp = _ref => {\n  let {\n    property,\n    state,\n    platform,\n    colormode\n  } = _ref;\n\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = function (_ref2) {\n  let {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps\n  } = _ref2;\n  let flattenProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let specificityMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let priority = arguments.length > 3 ? arguments[3] : undefined;\n\n  const mergePsuedoProps = (property, propertySpecity) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with higher specificity');\n      }\n\n      specificityMap[property] = propertySpecity; // merging internal props (like, _text, _stack ...)\n\n      flattenProps[property] = merge({}, flattenProps[property], props[property]);\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with lower specificity');\n      }\n\n      flattenProps[property] = merge({}, props[property], flattenProps[property]);\n    }\n  };\n\n  for (const property in props) {\n    var _pseudoPropsMap$prope; // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n\n\n    const propertySpecity = currentSpecificity ? { ...currentSpecificity\n    } : { ...INITIAL_PROP_SPECIFICITY,\n      [SPECIFICITY_20]: priority\n    };\n\n    if ( // @ts-ignore\n    state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(property)) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({\n        property,\n        state,\n        platform,\n        colormode\n      })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'recursively resolving');\n        } // @ts-ignore\n\n\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode,\n          platform,\n          state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps,\n          cascadePseudoProps\n        }, flattenProps, specificityMap, priority);\n      } // @ts-ignore\n\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as simple prop');\n          }\n\n          specificityMap[property] = propertySpecity; // replacing simple props (like, p, m, bg, color, ...)\n\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'cascaded');\n        }\n\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (_ref3, priority) => {\n  let {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps\n  } = _ref3;\n  const flattenProps = {};\n\n  for (const property in props) {\n    var _pseudoPropsMap$prope2;\n\n    if ( // @ts-ignore\n    state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n  simplifyProps({\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};","map":{"version":3,"mappings":"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","names":["merge","SPECIFICITY_1000","SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_20","SPECIFICITY_10","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","_important","compareSpecificity","exisiting","upcoming","ignorebaseTheme","condition","length","index","shouldResolvePseudoProp","property","state","platform","colormode","simplifyProps","props","currentSpecificity","previouslyFlattenProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","propertySpecity","process","env","NODE_ENV","debug","console","log","_pseudoPropsMap$prope","includes","undefined","startsWith","propsFlattener","currentSpecificityMap","_pseudoPropsMap$prope2"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/hooks/useThemeProps/propsFlattener.tsx"],"sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\n// SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [\n  SPECIFICITY_1000,\n  SPECIFICITY_110,\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_20,\n  SPECIFICITY_10,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0,\n};\n\nconst pseudoPropsMap = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110,\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000,\n  },\n} as const;\n\ntype IPseudoPropsMap = typeof pseudoPropsMap;\ntype ExtractState<T extends IPseudoPropsMap> = {\n  // @ts-ignore\n  [P in keyof T as T[P]['respondTo']]?: boolean;\n};\nexport type IStateProps = ExtractState<IPseudoPropsMap>;\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: {\n  property: keyof IPseudoPropsMap;\n  state: IStateProps;\n  platform: any;\n  colormode: any;\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  const mergePsuedoProps = (property: string, propertySpecity: object) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with higher specificity'\n        );\n      }\n      specificityMap[property] = propertySpecity;\n      // merging internal props (like, _text, _stack ...)\n      flattenProps[property] = merge(\n        {},\n        flattenProps[property],\n        props[property]\n      );\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with lower specificity'\n        );\n      }\n      flattenProps[property] = merge(\n        {},\n        props[property],\n        flattenProps[property]\n      );\n    }\n  };\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_20]: priority,\n        };\n\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(\n        property\n      )\n    ) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\n            `%c ${property}`,\n            'color: #818cf8;',\n            'recursively resolving'\n          );\n        }\n        // @ts-ignore\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n            cascadePseudoProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n      // @ts-ignore\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\n              `%c ${property}`,\n              'color: #818cf8;',\n              'updated as simple prop'\n            );\n          }\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(`%c ${property}`, 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n      cascadePseudoProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]},"metadata":{},"sourceType":"module"}