{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport { usePropsResolution, useStyledSystemPropsResolver } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledFlatList = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = (props, ref) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(_contentContainerStyle || {}); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledFlatList, _extends({}, resolvedProps, {\n    contentContainerStyle: contentContainerStyle || resolved_ContentContainerStyle,\n    ref: ref\n  }));\n};\n\nexport const FlatList = /*#__PURE__*/forwardRef(FlatListComponent);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,cAAvC;AACA,SACEC,kBADF,EAEEC,4BAFF,QAGO,gBAHP;AAIA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,cAAmB,GAAGF,mBAAmB,CAACH,UAAD,CAA/C;;AAEA,MAAMM,iBAAiB,GAAG,CACxBC,KADwB,EAExBC,GAFwB,KAGrB;EACH,MAAM;IACJC,sBADI;IAEJC,qBAFI;IAGJ,GAAGC;EAHC,IAIFV,kBAAkB,CAAC,UAAD,EAAaM,KAAb,CAJtB;EAKA,MAAMK,8BAA8B,GAAGV,4BAA4B,CACjEO,sBAAsB,IAAI,EADuC,CAAnE,CANG,CASH;;EACA,IAAIL,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACEV,oBAACQ,cAAD,eACMM,aADN;IAEED,qBAAqB,EACnBA,qBAAqB,IAAIE,8BAH7B;IAKEJ,GAAG,EAAEA;EALP,GADF;AAhBF;;AA2BA,OAAO,MAAMT,QAAQ,gBAAGD,UAAU,CAACQ,iBAAD,CAA3B","names":["React","forwardRef","FlatList","RNFlatList","usePropsResolution","useStyledSystemPropsResolver","makeStyledComponent","useHasResponsiveProps","StyledFlatList","FlatListComponent","props","ref","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/basic/FlatList/FlatList.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = <ItemT extends any>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledFlatList\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n};\n\nexport const FlatList = forwardRef(FlatListComponent) as <ItemT>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}