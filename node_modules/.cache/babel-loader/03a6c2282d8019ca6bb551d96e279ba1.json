{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../Pressable';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SliderTrack = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const {\n    orientation,\n    trackProps,\n    onTrackLayout,\n    colorScheme,\n    sliderSize,\n    isReadOnly,\n    isDisabled\n  } = React.useContext(SliderContext);\n  const isVertical = orientation === 'vertical';\n  const {\n    _pressable,\n    ...resolvedProps\n  } = usePropsResolution('SliderTrack', {\n    size: sliderSize,\n    colorScheme,\n    isVertical,\n    ...props\n  }, {\n    isReadOnly,\n    isDisabled\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Pressable, _extends({\n    onLayout: onTrackLayout,\n    ref: ref\n  }, trackProps, _pressable), /*#__PURE__*/React.createElement(Box, resolvedProps, children));\n};\n\nexport default /*#__PURE__*/React.forwardRef(SliderTrack);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAGA,MAAMC,WAAW,GAAG,OAA4CC,GAA5C,KAA0D;EAAA,IAAzD;IAAEC,QAAF;IAAY,GAAGC;EAAf,CAAyD;EAC5E,MAAM;IACJC,WADI;IAEJC,UAFI;IAGJC,aAHI;IAIJC,WAJI;IAKJC,UALI;IAMJC,UANI;IAOJC;EAPI,IAQFhB,KAAK,CAACiB,UAANjB,CAAiBI,aAAjBJ,CARJ;EAUA,MAAMkB,UAAU,GAAGR,WAAW,KAAK,UAAnC;EAEA,MAAM;IAAES,UAAF;IAAc,GAAGC;EAAjB,IAAmCnB,kBAAkB,CACzD,aADyD,EAEzD;IACEoB,IAAI,EAAEP,UADR;IAEED,WAFF;IAGEK,UAHF;IAIE,GAAGT;EAJL,CAFyD,EAQzD;IAAEM,UAAF;IAAcC;EAAd,CARyD,CAA3D,CAb4E,CAwB5E;;EACA,IAAIX,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,oBACET,oBAACE,SAAD;IACEoB,QAAQ,EAAEV,aADZ;IAEEL,GAAG,EAAEA;EAFP,GAGMI,UAHN,EAIMQ,UAJN,gBAMEnB,oBAACG,GAAD,EAASiB,aAAT,EAAyBZ,QAAzB,CANF,CADF;AA7BF;;AAyCA,4BAAeR,KAAK,CAACuB,UAANvB,CAAiBM,WAAjBN,CAAf","names":["React","usePropsResolution","Pressable","Box","SliderContext","useHasResponsiveProps","SliderTrack","ref","children","props","orientation","trackProps","onTrackLayout","colorScheme","sliderSize","isReadOnly","isDisabled","useContext","isVertical","_pressable","resolvedProps","size","onLayout","forwardRef"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/primitives/Slider/SliderTrack.tsx"],"sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../Pressable';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISliderTrackProps } from './types';\n\nconst SliderTrack = ({ children, ...props }: ISliderTrackProps, ref?: any) => {\n  const {\n    orientation,\n    trackProps,\n    onTrackLayout,\n    colorScheme,\n    sliderSize,\n    isReadOnly,\n    isDisabled,\n  } = React.useContext(SliderContext);\n\n  const isVertical = orientation === 'vertical';\n\n  const { _pressable, ...resolvedProps } = usePropsResolution(\n    'SliderTrack',\n    {\n      size: sliderSize,\n      colorScheme,\n      isVertical,\n      ...props,\n    },\n    { isReadOnly, isDisabled }\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      onLayout={onTrackLayout}\n      ref={ref}\n      {...trackProps}\n      {..._pressable}\n    >\n      <Box {...resolvedProps}>{children}</Box>\n    </Pressable>\n  );\n};\n\nexport default React.forwardRef(SliderTrack);\n"]},"metadata":{},"sourceType":"module"}