{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Tag = (_ref, ref) => {\n  let {\n    style,\n    ...props\n  } = _ref;\n  let resolvedProps = useThemeProps('Tag', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    style: style\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Tag));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,GAAG,GAAG,OAAiCC,GAAjC,KAA8C;EAAA,IAA7C;IAAEC,KAAF;IAAS,GAAGC;EAAZ,CAA6C;EACxD,IAAIC,aAAa,GAAGN,aAAa,CAAC,KAAD,EAAQK,KAAR,CAAjC,CADwD,CAExD;;EACA,IAAIJ,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOP,oBAACC,GAAD;IAAKK,KAAK,EAAEA;EAAZ,GAAuBE,aAAvB;IAAsCH,GAAG,EAAEA;EAA3C,GAAP;AANF;;AASA,4BAAeL,KAAK,CAACS,IAANT,eAAWA,KAAK,CAACU,UAANV,CAAiBI,GAAjBJ,CAAXA,CAAf","names":["React","Box","useThemeProps","useHasResponsiveProps","Tag","ref","style","props","resolvedProps","memo","forwardRef"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Tag/index.tsx"],"sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks';\nimport type { IInputComponentType, ITagProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Tag = ({ style, ...props }: ITagProps, ref: any) => {\n  let resolvedProps = useThemeProps('Tag', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box style={style} {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Tag)) as IInputComponentType;\nexport type { ITagProps };\n"]},"metadata":{},"sourceType":"module"}