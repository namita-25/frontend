{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport HStack from '../../primitives/Stack/HStack';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Badge = (_ref, ref) => {\n  let {\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    ...props\n  } = _ref;\n  const {\n    _icon,\n    _text,\n    ...newProps\n  } = usePropsResolution('Badge', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (endIcon && /*#__PURE__*/React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(endIcon, (child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"badge-end-icon-\".concat(index),\n        ..._icon,\n        ...child.props\n      });\n    });\n  }\n\n  if (startIcon && /*#__PURE__*/React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(startIcon, (child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        key: \"badge-start-icon-\".concat(index),\n        ..._icon,\n        ...child.props\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(HStack, _extends({}, newProps, {\n    ref: ref\n  }), startIcon ? startIcon : null, /*#__PURE__*/React.createElement(Box, {\n    _text: _text\n  }, children), endIcon ? endIcon : null);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Badge));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,qBAAT,QAAsC,sCAAtC;;AAEA,MAAMC,KAAK,GAAG,OAUZC,GAVY,KAWT;EAAA,IAVH;IACEC,QADF;IAEEC,SAFF;IAGEC,SAHF;IAIEC,QAJF;IAKEC,OALF;IAOE,GAAGC;EAPL,CAUG;EACH,MAAM;IAAEC,KAAF;IAASC,KAAT;IAAgB,GAAGC;EAAnB,IAAgCZ,kBAAkB,CAAC,OAAD,EAAUS,KAAV,CAAxD,CADG,CAGH;;EACA,IAAIR,qBAAqB,CAACQ,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,IAAIF,QAAJ,EAAc;IACZF,SAAS,GAAGE,QAAZF;EACD;;EACD,IAAIC,SAAJ,EAAe;IACbE,OAAO,GAAGF,SAAVE;EACD;;EAED,IAAIA,OAAO,iBAAIb,KAAK,CAACkB,cAANlB,CAAqBa,OAArBb,CAAf,EAA8C;IAC5Ca,OAAO,GAAGb,KAAK,CAACmB,QAANnB,CAAeoB,GAAfpB,CACRa,OADQb,EAER,CAACqB,KAAD,EAAqBC,KAArB,KAAuC;MACrC,oBAAOtB,KAAK,CAACuB,YAANvB,CAAmBqB,KAAnBrB,EAA0B;QAC/BwB,GAAG,2BAAoBF,KAApB,CAD4B;QAE/B,GAAGP,KAF4B;QAG/B,GAAGM,KAAK,CAACP;MAHsB,CAA1Bd,CAAP;IAHM,EAAVa;EAUD;;EACD,IAAIH,SAAS,iBAAIV,KAAK,CAACkB,cAANlB,CAAqBU,SAArBV,CAAjB,EAAkD;IAChDU,SAAS,GAAGV,KAAK,CAACmB,QAANnB,CAAeoB,GAAfpB,CACVU,SADUV,EAEV,CAACqB,KAAD,EAAqBC,KAArB,KAAuC;MACrC,oBAAOtB,KAAK,CAACuB,YAANvB,CAAmBqB,KAAnBrB,EAA0B;QAC/BwB,GAAG,6BAAsBF,KAAtB,CAD4B;QAE/B,GAAGP,KAF4B;QAG/B,GAAGM,KAAK,CAACP;MAHsB,CAA1Bd,CAAP;IAHQ,EAAZU;EAUD;;EAED,oBACEV,oBAACG,MAAD,eAAYc,QAAZ;IAAsBT,GAAG,EAAEA;EAA3B,IACGE,SAAS,GAAGA,SAAH,GAAe,IAD3B,eAEEV,oBAACI,GAAD;IAAKY,KAAK,EAAEA;EAAZ,GAAoBP,QAApB,CAFF,EAGGI,OAAO,GAAGA,OAAH,GAAa,IAHvB,CADF;AAnDF;;AA8DA,4BAAeZ,IAAI,eAACC,UAAU,CAACK,KAAD,CAAX,CAAnB","names":["React","memo","forwardRef","HStack","Box","usePropsResolution","useHasResponsiveProps","Badge","ref","children","startIcon","rightIcon","leftIcon","endIcon","props","_icon","_text","newProps","isValidElement","Children","map","child","index","cloneElement","key"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Badge/index.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport HStack from '../../primitives/Stack/HStack';\nimport Box from '../../primitives/Box';\nimport type { IBadgeProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Badge = (\n  {\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n\n    ...props\n  }: IBadgeProps,\n  ref: any\n) => {\n  const { _icon, _text, ...newProps } = usePropsResolution('Badge', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `badge-end-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `badge-start-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  return (\n    <HStack {...newProps} ref={ref}>\n      {startIcon ? startIcon : null}\n      <Box _text={_text}>{children}</Box>\n      {endIcon ? endIcon : null}\n    </HStack>\n  );\n};\n\nexport type IBadgeComponentType = (props: IBadgeProps) => JSX.Element;\n\nexport default memo(forwardRef(Badge)) as IBadgeComponentType;\nexport type { IBadgeProps };\n"]},"metadata":{},"sourceType":"module"}