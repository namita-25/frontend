{"ast":null,"code":"import { createContext } from 'react';\nexport const HybridContext = /*#__PURE__*/createContext({\n  colorMode: {\n    colorMode: 'light',\n    toggleColorMode: () => {},\n    setColorMode: () => {},\n    accessibleColors: false,\n    setAccessibleColors: () => {}\n  }\n});","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAGA,OAAO,MAAMC,aAAa,gBAAGD,aAAa,CAAsB;EAC9DE,SAAS,EAAE;IACTA,SAAS,EAAE,OADF;IAETC,eAAe,EAAE,MAAM,CAFd;IAGTC,YAAY,EAAE,MAAM,CAHX;IAITC,gBAAgB,EAAE,KAJT;IAKTC,mBAAmB,EAAE,MAAM,CAAE;EALpB;AADmD,CAAtB,CAAnC","names":["createContext","HybridContext","colorMode","toggleColorMode","setColorMode","accessibleColors","setAccessibleColors"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/core/hybrid-overlay/Context.ts"],"sourcesContent":["import { createContext } from 'react';\nimport type { IHybridContextProps } from './types';\n\nexport const HybridContext = createContext<IHybridContextProps>({\n  colorMode: {\n    colorMode: 'light',\n    toggleColorMode: () => {},\n    setColorMode: () => {},\n    accessibleColors: false,\n    setAccessibleColors: () => {},\n  },\n});\n"]},"metadata":{},"sourceType":"module"}