{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport { usePropsResolution, useStyledSystemPropsResolver } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledScrollView = makeStyledComponent(RNScrollView);\nexport const ScrollView = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('ScrollView', props, {});\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(_contentContainerStyle || {}); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledScrollView, _extends({}, resolvedProps, {\n    contentContainerStyle: contentContainerStyle || resolved_ContentContainerStyle,\n    ref: ref\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,cAA3C;AACA,SACEC,kBADF,EAEEC,4BAFF,QAGO,gBAHP;AAIA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,gBAAqB,GAAGF,mBAAmB,CAACH,YAAD,CAAjD;AAEA,OAAO,MAAMD,UAAU,gBAAGD,UAAU,CAAC,CAACQ,KAAD,EAA0BC,GAA1B,KAAuC;EAC1E,MAAM;IACJC,sBADI;IAEJC,qBAFI;IAGJ,GAAGC;EAHC,IAIFT,kBAAkB,CAAC,YAAD,EAAeK,KAAf,EAAsB,EAAtB,CAJtB;EAKA,MAAMK,8BAA8B,GAAGT,4BAA4B,CACjEM,sBAAsB,IAAI,EADuC,CAAnE,CAN0E,CAS1E;;EACA,IAAIJ,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBACET,oBAACQ,gBAAD,eACMK,aADN;IAEED,qBAAqB,EACnBA,qBAAqB,IAAIE,8BAH7B;IAKEJ,GAAG,EAAEA;EALP,GADF;AAbkC,EAA7B","names":["React","forwardRef","ScrollView","RNScrollView","usePropsResolution","useStyledSystemPropsResolver","makeStyledComponent","useHasResponsiveProps","StyledScrollView","props","ref","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/basic/ScrollView/ScrollView.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IScrollViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledScrollView: any = makeStyledComponent(RNScrollView);\n\nexport const ScrollView = forwardRef((props: IScrollViewProps, ref: any) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('ScrollView', props, {});\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledScrollView\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}