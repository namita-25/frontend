{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { KeyboardAvoidingView as RNKeyboardAvoidingView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledKeyboardAvoidingView = makeStyledComponent(RNKeyboardAvoidingView);\nexport const KeyboardAvoidingView = /*#__PURE__*/forwardRef((props, ref) => {\n  const { ...resolvedProps\n  } = usePropsResolution('KeyboardAvoidingView', props, {}); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledKeyboardAvoidingView, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,oBAAoB,IAAIC,sBAAjC,QAA+D,cAA/D;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,0BAA+B,GAAGF,mBAAmB,CACzDF,sBADyD,CAA3D;AAIA,OAAO,MAAMD,oBAAoB,gBAAGD,UAAU,CAC5C,CAACO,KAAD,EAAoCC,GAApC,KAAiD;EAC/C,MAAM,EAAE,GAAGC;EAAL,IAAuBN,kBAAkB,CAC7C,sBAD6C,EAE7CI,KAF6C,EAG7C,EAH6C,CAA/C,CAD+C,CAM/C;;EACA,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,oBAAOR,oBAACO,0BAAD,eAAgCG,aAAhC;IAA+CD,GAAG,EAAEA;EAApD,GAAP;AAX0C,EAAvC","names":["React","forwardRef","KeyboardAvoidingView","RNKeyboardAvoidingView","usePropsResolution","makeStyledComponent","useHasResponsiveProps","StyledKeyboardAvoidingView","props","ref","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/basic/KeyboardAvoidingView/KeyboardAvoidingView.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { KeyboardAvoidingView as RNKeyboardAvoidingView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IKeyboardAvoidingViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledKeyboardAvoidingView: any = makeStyledComponent(\n  RNKeyboardAvoidingView\n);\n\nexport const KeyboardAvoidingView = forwardRef(\n  (props: IKeyboardAvoidingViewProps, ref: any) => {\n    const { ...resolvedProps } = usePropsResolution(\n      'KeyboardAvoidingView',\n      props,\n      {}\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return <StyledKeyboardAvoidingView {...resolvedProps} ref={ref} />;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}