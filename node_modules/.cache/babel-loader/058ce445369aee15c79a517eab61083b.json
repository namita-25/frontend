{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst StyledSectionList = makeStyledComponent(RNSectionList);\n\nconst SectionListComponent = (props, ref) => {\n  const { ...resolvedProps\n  } = usePropsResolution('SectionList', props); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(StyledSectionList, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport const SectionList = /*#__PURE__*/forwardRef(SectionListComponent);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAW,IAAIC,aAAxB,QAA6C,cAA7C;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,iBAAsB,GAAGF,mBAAmB,CAACF,aAAD,CAAlD;;AAEA,MAAMK,oBAAoB,GAAG,CAC3BC,KAD2B,EAE3BC,GAF2B,KAGxB;EACH,MAAM,EAAE,GAAGC;EAAL,IAAuBP,kBAAkB,CAAC,aAAD,EAAgBK,KAAhB,CAA/C,CADG,CAEH;;EACA,IAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,oBAAOT,oBAACO,iBAAD,eAAuBI,aAAvB;IAAsCD,GAAG,EAAEA;EAA3C,GAAP;AAVF;;AAaA,OAAO,MAAMR,WAAW,gBAAGD,UAAU,CAACO,oBAAD,CAA9B","names":["React","forwardRef","SectionList","RNSectionList","usePropsResolution","makeStyledComponent","useHasResponsiveProps","StyledSectionList","SectionListComponent","props","ref","resolvedProps"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/basic/SectionList/SectionList.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledSectionList: any = makeStyledComponent(RNSectionList);\n\nconst SectionListComponent = <ItemT extends any, sectionT extends any>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n};\n\nexport const SectionList = forwardRef(SectionListComponent) as <\n  ItemT,\n  sectionT\n>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}