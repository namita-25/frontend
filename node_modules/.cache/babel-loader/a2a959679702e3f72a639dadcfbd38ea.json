{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Box, Image } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport isNil from 'lodash.isnil';\nimport has from 'lodash.has';\n\nconst Avatar = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [error, setError] = React.useState(false);\n  const {\n    _image,\n    _badgeSize,\n    source,\n    ...resolvedProps\n  } = usePropsResolution('Avatar', props);\n  let Badge = /*#__PURE__*/React.createElement(React.Fragment, null);\n  const remainingChildren = []; //  Pop Badge from children\n\n  React.Children.map(children, child => {\n    if (typeof (child === null || child === void 0 ? void 0 : child.type) === 'object' && (child === null || child === void 0 ? void 0 : child.type.displayName) === 'AvatarBadge') {\n      var _child$props, _child$props2;\n\n      Badge = /*#__PURE__*/React.cloneElement(child, {\n        size: child !== null && child !== void 0 && (_child$props = child.props) !== null && _child$props !== void 0 && _child$props.size ? child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.size : _badgeSize ? _badgeSize[0] : undefined\n      });\n    } else {\n      remainingChildren.push(child);\n    }\n  }); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const getSource = () => {\n    if (source) {\n      if (has(source, 'uri') && !isNil(source.uri)) {\n        return source;\n      } else if (!has(source, 'uri')) {\n        return source;\n      }\n    }\n\n    return null;\n  };\n\n  const imageSource = getSource();\n  return /*#__PURE__*/React.createElement(Box, resolvedProps, imageSource && !error ? /*#__PURE__*/React.createElement(Image, _extends({\n    source: source,\n    onError: () => {\n      setError(true);\n    }\n  }, _image, {\n    ref: ref\n  })) : remainingChildren.length !== 0 && remainingChildren, Badge);\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Avatar));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,MAAM,GAAG,OAAuCC,GAAvC,KAAoD;EAAA,IAAnD;IAAEC,QAAF;IAAY,GAAGC;EAAf,CAAmD;EACjE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAANf,CAAe,KAAfA,CAA1B;EACA,MAAM;IAAEgB,MAAF;IAAUC,UAAV;IAAsBC,MAAtB;IAA8B,GAAGC;EAAjC,IAAmDd,kBAAkB,CACzE,QADyE,EAEzEO,KAFyE,CAA3E;EAKA,IAAIQ,KAAK,gBAAGpB,yCAAZ;EACA,MAAMqB,iBAAgC,GAAG,EAAzC,CARiE,CASjE;;EACArB,KAAK,CAACsB,QAANtB,CAAeuB,GAAfvB,CAAmBW,QAAnBX,EAA8BwB,KAAD,IAAW;IACtC,IACE,QAAOA,KAAP,SAAOA,SAAP,WAAOA,GAAP,MAAOA,QAAK,CAAEC,IAAd,MAAuB,QAAvB,IACA,MAAK,SAALD,SAAK,WAALA,iBAAK,CAAEC,IAAPD,CAAYE,WAAZ,MAA4B,aAF9B,EAGE;MAAA;;MACAN,KAAK,gBAAGpB,KAAK,CAAC2B,YAAN3B,CAAmBwB,KAAnBxB,EAA0B;QAChC4B,IAAI,EAAEJ,KAAK,SAALA,SAAK,WAALA,yBAAK,CAAEZ,KAAP,sDAAcgB,IAAdJ,GACFA,KADE,SACFA,SADE,WACFA,GADE,MACFA,GADE,iBACFA,KAAK,CAAEZ,KADL,kDACFiB,cAAcD,IADZJ,GAEFP,UAAU,GACVA,UAAU,CAAC,CAAD,CADA,GAEVa;MAL4B,CAA1B9B,CAARoB;IAJF,OAWO;MACLC,iBAAiB,CAACU,IAAlBV,CAAuBG,KAAvBH;IACD;EAdH,GAViE,CA2BjE;;EACA,IAAIf,qBAAqB,CAACM,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EAED,MAAMoB,SAAS,GAAG,MAAM;IACtB,IAAId,MAAJ,EAAY;MACV,IAAIV,GAAG,CAACU,MAAD,EAAS,KAAT,CAAHV,IAAsB,CAACD,KAAK,CAACW,MAAM,CAACe,GAAR,CAAhC,EAA8C;QAC5C,OAAOf,MAAP;MADF,OAEO,IAAI,CAACV,GAAG,CAACU,MAAD,EAAS,KAAT,CAAR,EAAyB;QAC9B,OAAOA,MAAP;MACD;IACF;;IACD,OAAO,IAAP;EARF;;EAUA,MAAMgB,WAAW,GAAGF,SAAS,EAA7B;EAEA,oBACEhC,oBAACG,GAAD,EAASgB,aAAT,EACGe,WAAW,IAAI,CAACrB,KAAhBqB,gBACClC,oBAACI,KAAD;IACEc,MAAM,EAAEA,MADV;IAEEiB,OAAO,EAAE,MAAM;MACbrB,QAAQ,CAAC,IAAD,CAARA;IACD;EAJH,GAKME,MALN;IAMEN,GAAG,EAAEA;EANP,GADDwB,GAUCb,iBAAiB,CAACe,MAAlBf,KAA6B,CAA7BA,IAAkCA,iBAXtC,EAaGD,KAbH,CADF;AA5CF;;AA+DA,4BAAenB,IAAI,eAACC,UAAU,CAACO,MAAD,CAAX,CAAnB","names":["React","memo","forwardRef","Box","Image","usePropsResolution","useHasResponsiveProps","isNil","has","Avatar","ref","children","props","error","setError","useState","_image","_badgeSize","source","resolvedProps","Badge","remainingChildren","Children","map","child","type","displayName","cloneElement","size","_child$props2","undefined","push","getSource","uri","imageSource","onError","length"],"sources":["/home/ttpl-rt-68/Documents/ULP/ulp-card/node_modules/native-base/lib/module/components/composites/Avatar/Avatar.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box, Image } from '../../primitives';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IAvatarProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport isNil from 'lodash.isnil';\nimport has from 'lodash.has';\n\nconst Avatar = ({ children, ...props }: IAvatarProps, ref: any) => {\n  const [error, setError] = React.useState(false);\n  const { _image, _badgeSize, source, ...resolvedProps } = usePropsResolution(\n    'Avatar',\n    props\n  );\n\n  let Badge = <></>;\n  const remainingChildren: JSX.Element[] = [];\n  //  Pop Badge from children\n  React.Children.map(children, (child) => {\n    if (\n      typeof child?.type === 'object' &&\n      child?.type.displayName === 'AvatarBadge'\n    ) {\n      Badge = React.cloneElement(child, {\n        size: child?.props?.size\n          ? child?.props?.size\n          : _badgeSize\n          ? _badgeSize[0]\n          : undefined,\n      });\n    } else {\n      remainingChildren.push(child);\n    }\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const getSource = () => {\n    if (source) {\n      if (has(source, 'uri') && !isNil(source.uri)) {\n        return source;\n      } else if (!has(source, 'uri')) {\n        return source;\n      }\n    }\n    return null;\n  };\n  const imageSource = getSource();\n\n  return (\n    <Box {...resolvedProps}>\n      {imageSource && !error ? (\n        <Image\n          source={source}\n          onError={() => {\n            setError(true);\n          }}\n          {..._image}\n          ref={ref}\n        />\n      ) : (\n        remainingChildren.length !== 0 && remainingChildren\n      )}\n      {Badge}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Avatar));\n"]},"metadata":{},"sourceType":"module"}